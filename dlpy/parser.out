Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt_list
Rule 2     stmt_list -> stmt_list stmt
Rule 3     stmt_list -> stmt
Rule 4     stmt -> simple_stmt
Rule 5     stmt -> compound_stmt
Rule 6     compound_stmt -> if_stmt
Rule 7     compound_stmt -> while_stmt
Rule 8     compound_stmt -> funcdef_stmt
Rule 9     compound_stmt -> print
Rule 10    simple_stmt -> small_stmt SEMICOLON
Rule 11    small_stmt -> test
Rule 12    small_stmt -> flow_stmt
Rule 13    small_stmt -> dl_stmt
Rule 14    small_stmt -> assign_expr
Rule 15    print -> PRINT LPAREN small_stmt RPAREN SEMICOLON
Rule 16    dl_stmt -> train_stmt
Rule 17    dl_stmt -> pred_stmt
Rule 18    dl_stmt -> save_stmt
Rule 19    dl_stmt -> chat_stmt
Rule 20    train_stmt -> TRAIN name list_expr
Rule 21    pred_stmt -> PRED name STRING
Rule 22    save_stmt -> SAVE name STRING
Rule 23    chat_stmt -> CHAT name name
Rule 24    flow_stmt -> RETURN
Rule 25    flow_stmt -> RETURN list_expr
Rule 26    flow_stmt -> BREAK
Rule 27    flow_stmt -> CONTINUE
Rule 28    while_stmt -> WHILE test suite
Rule 29    while_stmt -> WHILE test suite ELSE suite
Rule 30    if_stmt -> IF test suite
Rule 31    if_stmt -> IF test suite ELSE suite
Rule 32    funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite
Rule 33    funcdef_stmt -> DEF name LPAREN RPAREN suite
Rule 34    suite -> simple_stmt
Rule 35    suite -> LBRACK stmt_list RBRACK
Rule 36    test -> comparison OR test
Rule 37    test -> comparison AND test
Rule 38    test -> comparison
Rule 39    comparison -> expr GT expr
Rule 40    comparison -> expr LT expr
Rule 41    comparison -> expr GTE expr
Rule 42    comparison -> expr LTE expr
Rule 43    comparison -> expr EQ expr
Rule 44    comparison -> expr NEQ expr
Rule 45    comparison -> expr
Rule 46    basic_type -> INT_TYPE
Rule 47    basic_type -> FLOAT_TYPE
Rule 48    basic_type -> LIST_TYPE
Rule 49    basic_type -> TUPLE_TYPE
Rule 50    basic_type -> MLP
Rule 51    basic_type -> TRANSFORMER
Rule 52    assign_expr -> NAME ASSIGN expr
Rule 53    assign_expr -> NAME COLON basic_type ASSIGN expr
Rule 54    assign_expr -> NAME COLON basic_type ASSIGN STRING COLON STRING
Rule 55    assign_expr -> NAME COLON basic_type ASSIGN list_expr COLON STRING
Rule 56    assign_expr -> NAME ASSIGN SCAN LPAREN RPAREN
Rule 57    expr -> expr PLUS expr
Rule 58    expr -> expr MINUS expr
Rule 59    expr -> expr TIMES expr
Rule 60    expr -> expr DIVIDE expr
Rule 61    expr -> expr MOD expr
Rule 62    expr -> factor
Rule 63    factor -> PLUS factor
Rule 64    factor -> MINUS factor
Rule 65    factor -> atom_expr
Rule 66    atom_expr -> atom
Rule 67    atom_expr -> atom_expr LSQBRACK expr RSQBRACK
Rule 68    atom_expr -> name LPAREN list_expr RPAREN
Rule 69    atom -> LPAREN list_expr RPAREN
Rule 70    atom -> LSQBRACK list_expr RSQBRACK
Rule 71    atom -> name
Rule 72    atom -> number
Rule 73    atom -> string
Rule 74    atom -> TRUE
Rule 75    atom -> FALSE
Rule 76    atom -> NONE
Rule 77    atom -> name LSQBRACK atom RSQBRACK
Rule 78    list_expr -> list_expr COMMA expr
Rule 79    list_expr -> expr
Rule 80    name -> NAME
Rule 81    number -> INT
Rule 82    number -> FLOAT
Rule 83    string -> STRING

Terminals, with rules where they appear

AND                  : 37
ASSIGN               : 52 53 54 55 56
BREAK                : 26
CHAT                 : 23
COLON                : 53 54 54 55 55
COMMA                : 78
CONTINUE             : 27
DEF                  : 32 33
DIVIDE               : 60
ELSE                 : 29 31
EQ                   : 43
FALSE                : 75
FLOAT                : 82
FLOAT_TYPE           : 47
GT                   : 39
GTE                  : 41
IF                   : 30 31
INT                  : 81
INT_TYPE             : 46
LBRACK               : 35
LIST_TYPE            : 48
LPAREN               : 15 32 33 56 68 69
LSQBRACK             : 67 70 77
LT                   : 40
LTE                  : 42
MINUS                : 58 64
MLP                  : 50
MOD                  : 61
NAME                 : 52 53 54 55 56 80
NEQ                  : 44
NONE                 : 76
OR                   : 36
PLUS                 : 57 63
PRED                 : 21
PRINT                : 15
RBRACK               : 35
RETURN               : 24 25
RPAREN               : 15 32 33 56 68 69
RSQBRACK             : 67 70 77
SAVE                 : 22
SCAN                 : 56
SEMICOLON            : 10 15
STRING               : 21 22 54 54 55 83
TIMES                : 59
TRAIN                : 20
TRANSFORMER          : 51
TRUE                 : 74
TUPLE_TYPE           : 49
WHILE                : 28 29
error                : 

Nonterminals, with rules where they appear

assign_expr          : 14
atom                 : 66 77
atom_expr            : 65 67
basic_type           : 53 54 55
chat_stmt            : 19
comparison           : 36 37 38
compound_stmt        : 5
dl_stmt              : 13
expr                 : 39 39 40 40 41 41 42 42 43 43 44 44 45 52 53 57 57 58 58 59 59 60 60 61 61 67 78 79
factor               : 62 63 64
flow_stmt            : 12
funcdef_stmt         : 8
if_stmt              : 6
list_expr            : 20 25 32 55 68 69 70 78
name                 : 20 21 22 23 23 32 33 68 71 77
number               : 72
pred_stmt            : 17
print                : 9
program              : 0
save_stmt            : 18
simple_stmt          : 4 34
small_stmt           : 10 15
stmt                 : 2 3
stmt_list            : 1 2 35
string               : 73
suite                : 28 29 29 30 31 31 32 33
test                 : 11 28 29 30 31 36 37
train_stmt           : 16
while_stmt           : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmt_list
    (2) stmt_list -> . stmt_list stmt
    (3) stmt_list -> . stmt
    (4) stmt -> . simple_stmt
    (5) stmt -> . compound_stmt
    (10) simple_stmt -> . small_stmt SEMICOLON
    (6) compound_stmt -> . if_stmt
    (7) compound_stmt -> . while_stmt
    (8) compound_stmt -> . funcdef_stmt
    (9) compound_stmt -> . print
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (30) if_stmt -> . IF test suite
    (31) if_stmt -> . IF test suite ELSE suite
    (28) while_stmt -> . WHILE test suite
    (29) while_stmt -> . WHILE test suite ELSE suite
    (32) funcdef_stmt -> . DEF name LPAREN list_expr RPAREN suite
    (33) funcdef_stmt -> . DEF name LPAREN RPAREN suite
    (15) print -> . PRINT LPAREN small_stmt RPAREN SEMICOLON
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    IF              shift and go to state 15
    WHILE           shift and go to state 16
    DEF             shift and go to state 17
    PRINT           shift and go to state 20
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    program                        shift and go to state 1
    stmt_list                      shift and go to state 2
    stmt                           shift and go to state 3
    simple_stmt                    shift and go to state 4
    compound_stmt                  shift and go to state 5
    small_stmt                     shift and go to state 6
    if_stmt                        shift and go to state 7
    while_stmt                     shift and go to state 8
    funcdef_stmt                   shift and go to state 9
    print                          shift and go to state 10
    test                           shift and go to state 11
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    name                           shift and go to state 18
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 1

    (0) S' -> program .



state 2

    (1) program -> stmt_list .
    (2) stmt_list -> stmt_list . stmt
    (4) stmt -> . simple_stmt
    (5) stmt -> . compound_stmt
    (10) simple_stmt -> . small_stmt SEMICOLON
    (6) compound_stmt -> . if_stmt
    (7) compound_stmt -> . while_stmt
    (8) compound_stmt -> . funcdef_stmt
    (9) compound_stmt -> . print
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (30) if_stmt -> . IF test suite
    (31) if_stmt -> . IF test suite ELSE suite
    (28) while_stmt -> . WHILE test suite
    (29) while_stmt -> . WHILE test suite ELSE suite
    (32) funcdef_stmt -> . DEF name LPAREN list_expr RPAREN suite
    (33) funcdef_stmt -> . DEF name LPAREN RPAREN suite
    (15) print -> . PRINT LPAREN small_stmt RPAREN SEMICOLON
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    $end            reduce using rule 1 (program -> stmt_list .)
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    DEF             shift and go to state 17
    PRINT           shift and go to state 20
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    stmt                           shift and go to state 49
    simple_stmt                    shift and go to state 4
    compound_stmt                  shift and go to state 5
    small_stmt                     shift and go to state 6
    if_stmt                        shift and go to state 7
    while_stmt                     shift and go to state 8
    funcdef_stmt                   shift and go to state 9
    print                          shift and go to state 10
    test                           shift and go to state 11
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    name                           shift and go to state 18
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 3

    (3) stmt_list -> stmt .

    IF              reduce using rule 3 (stmt_list -> stmt .)
    WHILE           reduce using rule 3 (stmt_list -> stmt .)
    DEF             reduce using rule 3 (stmt_list -> stmt .)
    PRINT           reduce using rule 3 (stmt_list -> stmt .)
    RETURN          reduce using rule 3 (stmt_list -> stmt .)
    BREAK           reduce using rule 3 (stmt_list -> stmt .)
    CONTINUE        reduce using rule 3 (stmt_list -> stmt .)
    NAME            reduce using rule 3 (stmt_list -> stmt .)
    TRAIN           reduce using rule 3 (stmt_list -> stmt .)
    PRED            reduce using rule 3 (stmt_list -> stmt .)
    SAVE            reduce using rule 3 (stmt_list -> stmt .)
    CHAT            reduce using rule 3 (stmt_list -> stmt .)
    PLUS            reduce using rule 3 (stmt_list -> stmt .)
    MINUS           reduce using rule 3 (stmt_list -> stmt .)
    LPAREN          reduce using rule 3 (stmt_list -> stmt .)
    LSQBRACK        reduce using rule 3 (stmt_list -> stmt .)
    TRUE            reduce using rule 3 (stmt_list -> stmt .)
    FALSE           reduce using rule 3 (stmt_list -> stmt .)
    NONE            reduce using rule 3 (stmt_list -> stmt .)
    INT             reduce using rule 3 (stmt_list -> stmt .)
    FLOAT           reduce using rule 3 (stmt_list -> stmt .)
    STRING          reduce using rule 3 (stmt_list -> stmt .)
    $end            reduce using rule 3 (stmt_list -> stmt .)
    RBRACK          reduce using rule 3 (stmt_list -> stmt .)


state 4

    (4) stmt -> simple_stmt .

    IF              reduce using rule 4 (stmt -> simple_stmt .)
    WHILE           reduce using rule 4 (stmt -> simple_stmt .)
    DEF             reduce using rule 4 (stmt -> simple_stmt .)
    PRINT           reduce using rule 4 (stmt -> simple_stmt .)
    RETURN          reduce using rule 4 (stmt -> simple_stmt .)
    BREAK           reduce using rule 4 (stmt -> simple_stmt .)
    CONTINUE        reduce using rule 4 (stmt -> simple_stmt .)
    NAME            reduce using rule 4 (stmt -> simple_stmt .)
    TRAIN           reduce using rule 4 (stmt -> simple_stmt .)
    PRED            reduce using rule 4 (stmt -> simple_stmt .)
    SAVE            reduce using rule 4 (stmt -> simple_stmt .)
    CHAT            reduce using rule 4 (stmt -> simple_stmt .)
    PLUS            reduce using rule 4 (stmt -> simple_stmt .)
    MINUS           reduce using rule 4 (stmt -> simple_stmt .)
    LPAREN          reduce using rule 4 (stmt -> simple_stmt .)
    LSQBRACK        reduce using rule 4 (stmt -> simple_stmt .)
    TRUE            reduce using rule 4 (stmt -> simple_stmt .)
    FALSE           reduce using rule 4 (stmt -> simple_stmt .)
    NONE            reduce using rule 4 (stmt -> simple_stmt .)
    INT             reduce using rule 4 (stmt -> simple_stmt .)
    FLOAT           reduce using rule 4 (stmt -> simple_stmt .)
    STRING          reduce using rule 4 (stmt -> simple_stmt .)
    $end            reduce using rule 4 (stmt -> simple_stmt .)
    RBRACK          reduce using rule 4 (stmt -> simple_stmt .)


state 5

    (5) stmt -> compound_stmt .

    IF              reduce using rule 5 (stmt -> compound_stmt .)
    WHILE           reduce using rule 5 (stmt -> compound_stmt .)
    DEF             reduce using rule 5 (stmt -> compound_stmt .)
    PRINT           reduce using rule 5 (stmt -> compound_stmt .)
    RETURN          reduce using rule 5 (stmt -> compound_stmt .)
    BREAK           reduce using rule 5 (stmt -> compound_stmt .)
    CONTINUE        reduce using rule 5 (stmt -> compound_stmt .)
    NAME            reduce using rule 5 (stmt -> compound_stmt .)
    TRAIN           reduce using rule 5 (stmt -> compound_stmt .)
    PRED            reduce using rule 5 (stmt -> compound_stmt .)
    SAVE            reduce using rule 5 (stmt -> compound_stmt .)
    CHAT            reduce using rule 5 (stmt -> compound_stmt .)
    PLUS            reduce using rule 5 (stmt -> compound_stmt .)
    MINUS           reduce using rule 5 (stmt -> compound_stmt .)
    LPAREN          reduce using rule 5 (stmt -> compound_stmt .)
    LSQBRACK        reduce using rule 5 (stmt -> compound_stmt .)
    TRUE            reduce using rule 5 (stmt -> compound_stmt .)
    FALSE           reduce using rule 5 (stmt -> compound_stmt .)
    NONE            reduce using rule 5 (stmt -> compound_stmt .)
    INT             reduce using rule 5 (stmt -> compound_stmt .)
    FLOAT           reduce using rule 5 (stmt -> compound_stmt .)
    STRING          reduce using rule 5 (stmt -> compound_stmt .)
    $end            reduce using rule 5 (stmt -> compound_stmt .)
    RBRACK          reduce using rule 5 (stmt -> compound_stmt .)


state 6

    (10) simple_stmt -> small_stmt . SEMICOLON

    SEMICOLON       shift and go to state 50


state 7

    (6) compound_stmt -> if_stmt .

    IF              reduce using rule 6 (compound_stmt -> if_stmt .)
    WHILE           reduce using rule 6 (compound_stmt -> if_stmt .)
    DEF             reduce using rule 6 (compound_stmt -> if_stmt .)
    PRINT           reduce using rule 6 (compound_stmt -> if_stmt .)
    RETURN          reduce using rule 6 (compound_stmt -> if_stmt .)
    BREAK           reduce using rule 6 (compound_stmt -> if_stmt .)
    CONTINUE        reduce using rule 6 (compound_stmt -> if_stmt .)
    NAME            reduce using rule 6 (compound_stmt -> if_stmt .)
    TRAIN           reduce using rule 6 (compound_stmt -> if_stmt .)
    PRED            reduce using rule 6 (compound_stmt -> if_stmt .)
    SAVE            reduce using rule 6 (compound_stmt -> if_stmt .)
    CHAT            reduce using rule 6 (compound_stmt -> if_stmt .)
    PLUS            reduce using rule 6 (compound_stmt -> if_stmt .)
    MINUS           reduce using rule 6 (compound_stmt -> if_stmt .)
    LPAREN          reduce using rule 6 (compound_stmt -> if_stmt .)
    LSQBRACK        reduce using rule 6 (compound_stmt -> if_stmt .)
    TRUE            reduce using rule 6 (compound_stmt -> if_stmt .)
    FALSE           reduce using rule 6 (compound_stmt -> if_stmt .)
    NONE            reduce using rule 6 (compound_stmt -> if_stmt .)
    INT             reduce using rule 6 (compound_stmt -> if_stmt .)
    FLOAT           reduce using rule 6 (compound_stmt -> if_stmt .)
    STRING          reduce using rule 6 (compound_stmt -> if_stmt .)
    $end            reduce using rule 6 (compound_stmt -> if_stmt .)
    RBRACK          reduce using rule 6 (compound_stmt -> if_stmt .)


state 8

    (7) compound_stmt -> while_stmt .

    IF              reduce using rule 7 (compound_stmt -> while_stmt .)
    WHILE           reduce using rule 7 (compound_stmt -> while_stmt .)
    DEF             reduce using rule 7 (compound_stmt -> while_stmt .)
    PRINT           reduce using rule 7 (compound_stmt -> while_stmt .)
    RETURN          reduce using rule 7 (compound_stmt -> while_stmt .)
    BREAK           reduce using rule 7 (compound_stmt -> while_stmt .)
    CONTINUE        reduce using rule 7 (compound_stmt -> while_stmt .)
    NAME            reduce using rule 7 (compound_stmt -> while_stmt .)
    TRAIN           reduce using rule 7 (compound_stmt -> while_stmt .)
    PRED            reduce using rule 7 (compound_stmt -> while_stmt .)
    SAVE            reduce using rule 7 (compound_stmt -> while_stmt .)
    CHAT            reduce using rule 7 (compound_stmt -> while_stmt .)
    PLUS            reduce using rule 7 (compound_stmt -> while_stmt .)
    MINUS           reduce using rule 7 (compound_stmt -> while_stmt .)
    LPAREN          reduce using rule 7 (compound_stmt -> while_stmt .)
    LSQBRACK        reduce using rule 7 (compound_stmt -> while_stmt .)
    TRUE            reduce using rule 7 (compound_stmt -> while_stmt .)
    FALSE           reduce using rule 7 (compound_stmt -> while_stmt .)
    NONE            reduce using rule 7 (compound_stmt -> while_stmt .)
    INT             reduce using rule 7 (compound_stmt -> while_stmt .)
    FLOAT           reduce using rule 7 (compound_stmt -> while_stmt .)
    STRING          reduce using rule 7 (compound_stmt -> while_stmt .)
    $end            reduce using rule 7 (compound_stmt -> while_stmt .)
    RBRACK          reduce using rule 7 (compound_stmt -> while_stmt .)


state 9

    (8) compound_stmt -> funcdef_stmt .

    IF              reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    WHILE           reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    DEF             reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    PRINT           reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    RETURN          reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    BREAK           reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    CONTINUE        reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    NAME            reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    TRAIN           reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    PRED            reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    SAVE            reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    CHAT            reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    PLUS            reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    MINUS           reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    LPAREN          reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    LSQBRACK        reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    TRUE            reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    FALSE           reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    NONE            reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    INT             reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    FLOAT           reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    STRING          reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    $end            reduce using rule 8 (compound_stmt -> funcdef_stmt .)
    RBRACK          reduce using rule 8 (compound_stmt -> funcdef_stmt .)


state 10

    (9) compound_stmt -> print .

    IF              reduce using rule 9 (compound_stmt -> print .)
    WHILE           reduce using rule 9 (compound_stmt -> print .)
    DEF             reduce using rule 9 (compound_stmt -> print .)
    PRINT           reduce using rule 9 (compound_stmt -> print .)
    RETURN          reduce using rule 9 (compound_stmt -> print .)
    BREAK           reduce using rule 9 (compound_stmt -> print .)
    CONTINUE        reduce using rule 9 (compound_stmt -> print .)
    NAME            reduce using rule 9 (compound_stmt -> print .)
    TRAIN           reduce using rule 9 (compound_stmt -> print .)
    PRED            reduce using rule 9 (compound_stmt -> print .)
    SAVE            reduce using rule 9 (compound_stmt -> print .)
    CHAT            reduce using rule 9 (compound_stmt -> print .)
    PLUS            reduce using rule 9 (compound_stmt -> print .)
    MINUS           reduce using rule 9 (compound_stmt -> print .)
    LPAREN          reduce using rule 9 (compound_stmt -> print .)
    LSQBRACK        reduce using rule 9 (compound_stmt -> print .)
    TRUE            reduce using rule 9 (compound_stmt -> print .)
    FALSE           reduce using rule 9 (compound_stmt -> print .)
    NONE            reduce using rule 9 (compound_stmt -> print .)
    INT             reduce using rule 9 (compound_stmt -> print .)
    FLOAT           reduce using rule 9 (compound_stmt -> print .)
    STRING          reduce using rule 9 (compound_stmt -> print .)
    $end            reduce using rule 9 (compound_stmt -> print .)
    RBRACK          reduce using rule 9 (compound_stmt -> print .)


state 11

    (11) small_stmt -> test .

    SEMICOLON       reduce using rule 11 (small_stmt -> test .)
    RPAREN          reduce using rule 11 (small_stmt -> test .)


state 12

    (12) small_stmt -> flow_stmt .

    SEMICOLON       reduce using rule 12 (small_stmt -> flow_stmt .)
    RPAREN          reduce using rule 12 (small_stmt -> flow_stmt .)


state 13

    (13) small_stmt -> dl_stmt .

    SEMICOLON       reduce using rule 13 (small_stmt -> dl_stmt .)
    RPAREN          reduce using rule 13 (small_stmt -> dl_stmt .)


state 14

    (14) small_stmt -> assign_expr .

    SEMICOLON       reduce using rule 14 (small_stmt -> assign_expr .)
    RPAREN          reduce using rule 14 (small_stmt -> assign_expr .)


state 15

    (30) if_stmt -> IF . test suite
    (31) if_stmt -> IF . test suite ELSE suite
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    test                           shift and go to state 51
    comparison                     shift and go to state 21
    expr                           shift and go to state 30
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 16

    (28) while_stmt -> WHILE . test suite
    (29) while_stmt -> WHILE . test suite ELSE suite
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    test                           shift and go to state 53
    comparison                     shift and go to state 21
    expr                           shift and go to state 30
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 17

    (32) funcdef_stmt -> DEF . name LPAREN list_expr RPAREN suite
    (33) funcdef_stmt -> DEF . name LPAREN RPAREN suite
    (80) name -> . NAME

    NAME            shift and go to state 52

    name                           shift and go to state 54

state 18

    (68) atom_expr -> name . LPAREN list_expr RPAREN
    (71) atom -> name .
    (77) atom -> name . LSQBRACK atom RSQBRACK

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQBRACK resolved as shift
    LPAREN          shift and go to state 55
    GT              reduce using rule 71 (atom -> name .)
    LT              reduce using rule 71 (atom -> name .)
    GTE             reduce using rule 71 (atom -> name .)
    LTE             reduce using rule 71 (atom -> name .)
    EQ              reduce using rule 71 (atom -> name .)
    NEQ             reduce using rule 71 (atom -> name .)
    PLUS            reduce using rule 71 (atom -> name .)
    MINUS           reduce using rule 71 (atom -> name .)
    TIMES           reduce using rule 71 (atom -> name .)
    DIVIDE          reduce using rule 71 (atom -> name .)
    MOD             reduce using rule 71 (atom -> name .)
    OR              reduce using rule 71 (atom -> name .)
    AND             reduce using rule 71 (atom -> name .)
    SEMICOLON       reduce using rule 71 (atom -> name .)
    LBRACK          reduce using rule 71 (atom -> name .)
    RETURN          reduce using rule 71 (atom -> name .)
    BREAK           reduce using rule 71 (atom -> name .)
    CONTINUE        reduce using rule 71 (atom -> name .)
    NAME            reduce using rule 71 (atom -> name .)
    TRAIN           reduce using rule 71 (atom -> name .)
    PRED            reduce using rule 71 (atom -> name .)
    SAVE            reduce using rule 71 (atom -> name .)
    CHAT            reduce using rule 71 (atom -> name .)
    TRUE            reduce using rule 71 (atom -> name .)
    FALSE           reduce using rule 71 (atom -> name .)
    NONE            reduce using rule 71 (atom -> name .)
    INT             reduce using rule 71 (atom -> name .)
    FLOAT           reduce using rule 71 (atom -> name .)
    STRING          reduce using rule 71 (atom -> name .)
    RPAREN          reduce using rule 71 (atom -> name .)
    COMMA           reduce using rule 71 (atom -> name .)
    RSQBRACK        reduce using rule 71 (atom -> name .)
    COLON           reduce using rule 71 (atom -> name .)
    LSQBRACK        shift and go to state 56

  ! LSQBRACK        [ reduce using rule 71 (atom -> name .) ]
  ! LPAREN          [ reduce using rule 71 (atom -> name .) ]


state 19

    (69) atom -> LPAREN . list_expr RPAREN
    (78) list_expr -> . list_expr COMMA expr
    (79) list_expr -> . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    list_expr                      shift and go to state 57
    expr                           shift and go to state 58
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 20

    (15) print -> PRINT . LPAREN small_stmt RPAREN SEMICOLON

    LPAREN          shift and go to state 59


state 21

    (36) test -> comparison . OR test
    (37) test -> comparison . AND test
    (38) test -> comparison .

    OR              shift and go to state 60
    AND             shift and go to state 61
    SEMICOLON       reduce using rule 38 (test -> comparison .)
    LBRACK          reduce using rule 38 (test -> comparison .)
    RETURN          reduce using rule 38 (test -> comparison .)
    BREAK           reduce using rule 38 (test -> comparison .)
    CONTINUE        reduce using rule 38 (test -> comparison .)
    NAME            reduce using rule 38 (test -> comparison .)
    TRAIN           reduce using rule 38 (test -> comparison .)
    PRED            reduce using rule 38 (test -> comparison .)
    SAVE            reduce using rule 38 (test -> comparison .)
    CHAT            reduce using rule 38 (test -> comparison .)
    PLUS            reduce using rule 38 (test -> comparison .)
    MINUS           reduce using rule 38 (test -> comparison .)
    LPAREN          reduce using rule 38 (test -> comparison .)
    LSQBRACK        reduce using rule 38 (test -> comparison .)
    TRUE            reduce using rule 38 (test -> comparison .)
    FALSE           reduce using rule 38 (test -> comparison .)
    NONE            reduce using rule 38 (test -> comparison .)
    INT             reduce using rule 38 (test -> comparison .)
    FLOAT           reduce using rule 38 (test -> comparison .)
    STRING          reduce using rule 38 (test -> comparison .)
    RPAREN          reduce using rule 38 (test -> comparison .)


state 22

    (24) flow_stmt -> RETURN .
    (25) flow_stmt -> RETURN . list_expr
    (78) list_expr -> . list_expr COMMA expr
    (79) list_expr -> . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    SEMICOLON       reduce using rule 24 (flow_stmt -> RETURN .)
    RPAREN          reduce using rule 24 (flow_stmt -> RETURN .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    list_expr                      shift and go to state 62
    expr                           shift and go to state 58
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 23

    (26) flow_stmt -> BREAK .

    SEMICOLON       reduce using rule 26 (flow_stmt -> BREAK .)
    RPAREN          reduce using rule 26 (flow_stmt -> BREAK .)


state 24

    (27) flow_stmt -> CONTINUE .

    SEMICOLON       reduce using rule 27 (flow_stmt -> CONTINUE .)
    RPAREN          reduce using rule 27 (flow_stmt -> CONTINUE .)


state 25

    (16) dl_stmt -> train_stmt .

    SEMICOLON       reduce using rule 16 (dl_stmt -> train_stmt .)
    RPAREN          reduce using rule 16 (dl_stmt -> train_stmt .)


state 26

    (17) dl_stmt -> pred_stmt .

    SEMICOLON       reduce using rule 17 (dl_stmt -> pred_stmt .)
    RPAREN          reduce using rule 17 (dl_stmt -> pred_stmt .)


state 27

    (18) dl_stmt -> save_stmt .

    SEMICOLON       reduce using rule 18 (dl_stmt -> save_stmt .)
    RPAREN          reduce using rule 18 (dl_stmt -> save_stmt .)


state 28

    (19) dl_stmt -> chat_stmt .

    SEMICOLON       reduce using rule 19 (dl_stmt -> chat_stmt .)
    RPAREN          reduce using rule 19 (dl_stmt -> chat_stmt .)


state 29

    (52) assign_expr -> NAME . ASSIGN expr
    (53) assign_expr -> NAME . COLON basic_type ASSIGN expr
    (54) assign_expr -> NAME . COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> NAME . COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> NAME . ASSIGN SCAN LPAREN RPAREN
    (80) name -> NAME .

    ASSIGN          shift and go to state 63
    COLON           shift and go to state 64
    LPAREN          reduce using rule 80 (name -> NAME .)
    LSQBRACK        reduce using rule 80 (name -> NAME .)
    GT              reduce using rule 80 (name -> NAME .)
    LT              reduce using rule 80 (name -> NAME .)
    GTE             reduce using rule 80 (name -> NAME .)
    LTE             reduce using rule 80 (name -> NAME .)
    EQ              reduce using rule 80 (name -> NAME .)
    NEQ             reduce using rule 80 (name -> NAME .)
    PLUS            reduce using rule 80 (name -> NAME .)
    MINUS           reduce using rule 80 (name -> NAME .)
    TIMES           reduce using rule 80 (name -> NAME .)
    DIVIDE          reduce using rule 80 (name -> NAME .)
    MOD             reduce using rule 80 (name -> NAME .)
    OR              reduce using rule 80 (name -> NAME .)
    AND             reduce using rule 80 (name -> NAME .)
    SEMICOLON       reduce using rule 80 (name -> NAME .)
    RPAREN          reduce using rule 80 (name -> NAME .)


state 30

    (39) comparison -> expr . GT expr
    (40) comparison -> expr . LT expr
    (41) comparison -> expr . GTE expr
    (42) comparison -> expr . LTE expr
    (43) comparison -> expr . EQ expr
    (44) comparison -> expr . NEQ expr
    (45) comparison -> expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    GT              shift and go to state 65
    LT              shift and go to state 66
    GTE             shift and go to state 67
    LTE             shift and go to state 68
    EQ              shift and go to state 69
    NEQ             shift and go to state 70
    OR              reduce using rule 45 (comparison -> expr .)
    AND             reduce using rule 45 (comparison -> expr .)
    SEMICOLON       reduce using rule 45 (comparison -> expr .)
    LBRACK          reduce using rule 45 (comparison -> expr .)
    RETURN          reduce using rule 45 (comparison -> expr .)
    BREAK           reduce using rule 45 (comparison -> expr .)
    CONTINUE        reduce using rule 45 (comparison -> expr .)
    NAME            reduce using rule 45 (comparison -> expr .)
    TRAIN           reduce using rule 45 (comparison -> expr .)
    PRED            reduce using rule 45 (comparison -> expr .)
    SAVE            reduce using rule 45 (comparison -> expr .)
    CHAT            reduce using rule 45 (comparison -> expr .)
    LPAREN          reduce using rule 45 (comparison -> expr .)
    LSQBRACK        reduce using rule 45 (comparison -> expr .)
    TRUE            reduce using rule 45 (comparison -> expr .)
    FALSE           reduce using rule 45 (comparison -> expr .)
    NONE            reduce using rule 45 (comparison -> expr .)
    INT             reduce using rule 45 (comparison -> expr .)
    FLOAT           reduce using rule 45 (comparison -> expr .)
    STRING          reduce using rule 45 (comparison -> expr .)
    RPAREN          reduce using rule 45 (comparison -> expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75

  ! PLUS            [ reduce using rule 45 (comparison -> expr .) ]
  ! MINUS           [ reduce using rule 45 (comparison -> expr .) ]


state 31

    (83) string -> STRING .

    LSQBRACK        reduce using rule 83 (string -> STRING .)
    GT              reduce using rule 83 (string -> STRING .)
    LT              reduce using rule 83 (string -> STRING .)
    GTE             reduce using rule 83 (string -> STRING .)
    LTE             reduce using rule 83 (string -> STRING .)
    EQ              reduce using rule 83 (string -> STRING .)
    NEQ             reduce using rule 83 (string -> STRING .)
    PLUS            reduce using rule 83 (string -> STRING .)
    MINUS           reduce using rule 83 (string -> STRING .)
    TIMES           reduce using rule 83 (string -> STRING .)
    DIVIDE          reduce using rule 83 (string -> STRING .)
    MOD             reduce using rule 83 (string -> STRING .)
    OR              reduce using rule 83 (string -> STRING .)
    AND             reduce using rule 83 (string -> STRING .)
    SEMICOLON       reduce using rule 83 (string -> STRING .)
    LBRACK          reduce using rule 83 (string -> STRING .)
    RETURN          reduce using rule 83 (string -> STRING .)
    BREAK           reduce using rule 83 (string -> STRING .)
    CONTINUE        reduce using rule 83 (string -> STRING .)
    NAME            reduce using rule 83 (string -> STRING .)
    TRAIN           reduce using rule 83 (string -> STRING .)
    PRED            reduce using rule 83 (string -> STRING .)
    SAVE            reduce using rule 83 (string -> STRING .)
    CHAT            reduce using rule 83 (string -> STRING .)
    LPAREN          reduce using rule 83 (string -> STRING .)
    TRUE            reduce using rule 83 (string -> STRING .)
    FALSE           reduce using rule 83 (string -> STRING .)
    NONE            reduce using rule 83 (string -> STRING .)
    INT             reduce using rule 83 (string -> STRING .)
    FLOAT           reduce using rule 83 (string -> STRING .)
    STRING          reduce using rule 83 (string -> STRING .)
    RPAREN          reduce using rule 83 (string -> STRING .)
    COMMA           reduce using rule 83 (string -> STRING .)
    RSQBRACK        reduce using rule 83 (string -> STRING .)
    COLON           reduce using rule 83 (string -> STRING .)


state 32

    (20) train_stmt -> TRAIN . name list_expr
    (80) name -> . NAME

    NAME            shift and go to state 52

    name                           shift and go to state 76

state 33

    (21) pred_stmt -> PRED . name STRING
    (80) name -> . NAME

    NAME            shift and go to state 52

    name                           shift and go to state 77

state 34

    (22) save_stmt -> SAVE . name STRING
    (80) name -> . NAME

    NAME            shift and go to state 52

    name                           shift and go to state 78

state 35

    (23) chat_stmt -> CHAT . name name
    (80) name -> . NAME

    NAME            shift and go to state 52

    name                           shift and go to state 79

state 36

    (63) factor -> PLUS . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    factor                         shift and go to state 80
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 37

    (64) factor -> MINUS . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    factor                         shift and go to state 81
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 38

    (62) expr -> factor .

    GT              reduce using rule 62 (expr -> factor .)
    LT              reduce using rule 62 (expr -> factor .)
    GTE             reduce using rule 62 (expr -> factor .)
    LTE             reduce using rule 62 (expr -> factor .)
    EQ              reduce using rule 62 (expr -> factor .)
    NEQ             reduce using rule 62 (expr -> factor .)
    PLUS            reduce using rule 62 (expr -> factor .)
    MINUS           reduce using rule 62 (expr -> factor .)
    TIMES           reduce using rule 62 (expr -> factor .)
    DIVIDE          reduce using rule 62 (expr -> factor .)
    MOD             reduce using rule 62 (expr -> factor .)
    OR              reduce using rule 62 (expr -> factor .)
    AND             reduce using rule 62 (expr -> factor .)
    SEMICOLON       reduce using rule 62 (expr -> factor .)
    LBRACK          reduce using rule 62 (expr -> factor .)
    RETURN          reduce using rule 62 (expr -> factor .)
    BREAK           reduce using rule 62 (expr -> factor .)
    CONTINUE        reduce using rule 62 (expr -> factor .)
    NAME            reduce using rule 62 (expr -> factor .)
    TRAIN           reduce using rule 62 (expr -> factor .)
    PRED            reduce using rule 62 (expr -> factor .)
    SAVE            reduce using rule 62 (expr -> factor .)
    CHAT            reduce using rule 62 (expr -> factor .)
    LPAREN          reduce using rule 62 (expr -> factor .)
    LSQBRACK        reduce using rule 62 (expr -> factor .)
    TRUE            reduce using rule 62 (expr -> factor .)
    FALSE           reduce using rule 62 (expr -> factor .)
    NONE            reduce using rule 62 (expr -> factor .)
    INT             reduce using rule 62 (expr -> factor .)
    FLOAT           reduce using rule 62 (expr -> factor .)
    STRING          reduce using rule 62 (expr -> factor .)
    RPAREN          reduce using rule 62 (expr -> factor .)
    COMMA           reduce using rule 62 (expr -> factor .)
    RSQBRACK        reduce using rule 62 (expr -> factor .)
    COLON           reduce using rule 62 (expr -> factor .)


state 39

    (65) factor -> atom_expr .
    (67) atom_expr -> atom_expr . LSQBRACK expr RSQBRACK

  ! shift/reduce conflict for LSQBRACK resolved as shift
    GT              reduce using rule 65 (factor -> atom_expr .)
    LT              reduce using rule 65 (factor -> atom_expr .)
    GTE             reduce using rule 65 (factor -> atom_expr .)
    LTE             reduce using rule 65 (factor -> atom_expr .)
    EQ              reduce using rule 65 (factor -> atom_expr .)
    NEQ             reduce using rule 65 (factor -> atom_expr .)
    PLUS            reduce using rule 65 (factor -> atom_expr .)
    MINUS           reduce using rule 65 (factor -> atom_expr .)
    TIMES           reduce using rule 65 (factor -> atom_expr .)
    DIVIDE          reduce using rule 65 (factor -> atom_expr .)
    MOD             reduce using rule 65 (factor -> atom_expr .)
    OR              reduce using rule 65 (factor -> atom_expr .)
    AND             reduce using rule 65 (factor -> atom_expr .)
    SEMICOLON       reduce using rule 65 (factor -> atom_expr .)
    LBRACK          reduce using rule 65 (factor -> atom_expr .)
    RETURN          reduce using rule 65 (factor -> atom_expr .)
    BREAK           reduce using rule 65 (factor -> atom_expr .)
    CONTINUE        reduce using rule 65 (factor -> atom_expr .)
    NAME            reduce using rule 65 (factor -> atom_expr .)
    TRAIN           reduce using rule 65 (factor -> atom_expr .)
    PRED            reduce using rule 65 (factor -> atom_expr .)
    SAVE            reduce using rule 65 (factor -> atom_expr .)
    CHAT            reduce using rule 65 (factor -> atom_expr .)
    LPAREN          reduce using rule 65 (factor -> atom_expr .)
    TRUE            reduce using rule 65 (factor -> atom_expr .)
    FALSE           reduce using rule 65 (factor -> atom_expr .)
    NONE            reduce using rule 65 (factor -> atom_expr .)
    INT             reduce using rule 65 (factor -> atom_expr .)
    FLOAT           reduce using rule 65 (factor -> atom_expr .)
    STRING          reduce using rule 65 (factor -> atom_expr .)
    RPAREN          reduce using rule 65 (factor -> atom_expr .)
    COMMA           reduce using rule 65 (factor -> atom_expr .)
    RSQBRACK        reduce using rule 65 (factor -> atom_expr .)
    COLON           reduce using rule 65 (factor -> atom_expr .)
    LSQBRACK        shift and go to state 82

  ! LSQBRACK        [ reduce using rule 65 (factor -> atom_expr .) ]


state 40

    (66) atom_expr -> atom .

    LSQBRACK        reduce using rule 66 (atom_expr -> atom .)
    GT              reduce using rule 66 (atom_expr -> atom .)
    LT              reduce using rule 66 (atom_expr -> atom .)
    GTE             reduce using rule 66 (atom_expr -> atom .)
    LTE             reduce using rule 66 (atom_expr -> atom .)
    EQ              reduce using rule 66 (atom_expr -> atom .)
    NEQ             reduce using rule 66 (atom_expr -> atom .)
    PLUS            reduce using rule 66 (atom_expr -> atom .)
    MINUS           reduce using rule 66 (atom_expr -> atom .)
    TIMES           reduce using rule 66 (atom_expr -> atom .)
    DIVIDE          reduce using rule 66 (atom_expr -> atom .)
    MOD             reduce using rule 66 (atom_expr -> atom .)
    OR              reduce using rule 66 (atom_expr -> atom .)
    AND             reduce using rule 66 (atom_expr -> atom .)
    SEMICOLON       reduce using rule 66 (atom_expr -> atom .)
    LBRACK          reduce using rule 66 (atom_expr -> atom .)
    RETURN          reduce using rule 66 (atom_expr -> atom .)
    BREAK           reduce using rule 66 (atom_expr -> atom .)
    CONTINUE        reduce using rule 66 (atom_expr -> atom .)
    NAME            reduce using rule 66 (atom_expr -> atom .)
    TRAIN           reduce using rule 66 (atom_expr -> atom .)
    PRED            reduce using rule 66 (atom_expr -> atom .)
    SAVE            reduce using rule 66 (atom_expr -> atom .)
    CHAT            reduce using rule 66 (atom_expr -> atom .)
    LPAREN          reduce using rule 66 (atom_expr -> atom .)
    TRUE            reduce using rule 66 (atom_expr -> atom .)
    FALSE           reduce using rule 66 (atom_expr -> atom .)
    NONE            reduce using rule 66 (atom_expr -> atom .)
    INT             reduce using rule 66 (atom_expr -> atom .)
    FLOAT           reduce using rule 66 (atom_expr -> atom .)
    STRING          reduce using rule 66 (atom_expr -> atom .)
    RPAREN          reduce using rule 66 (atom_expr -> atom .)
    COMMA           reduce using rule 66 (atom_expr -> atom .)
    RSQBRACK        reduce using rule 66 (atom_expr -> atom .)
    COLON           reduce using rule 66 (atom_expr -> atom .)


state 41

    (70) atom -> LSQBRACK . list_expr RSQBRACK
    (78) list_expr -> . list_expr COMMA expr
    (79) list_expr -> . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    list_expr                      shift and go to state 83
    expr                           shift and go to state 58
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 42

    (72) atom -> number .

    LSQBRACK        reduce using rule 72 (atom -> number .)
    GT              reduce using rule 72 (atom -> number .)
    LT              reduce using rule 72 (atom -> number .)
    GTE             reduce using rule 72 (atom -> number .)
    LTE             reduce using rule 72 (atom -> number .)
    EQ              reduce using rule 72 (atom -> number .)
    NEQ             reduce using rule 72 (atom -> number .)
    PLUS            reduce using rule 72 (atom -> number .)
    MINUS           reduce using rule 72 (atom -> number .)
    TIMES           reduce using rule 72 (atom -> number .)
    DIVIDE          reduce using rule 72 (atom -> number .)
    MOD             reduce using rule 72 (atom -> number .)
    OR              reduce using rule 72 (atom -> number .)
    AND             reduce using rule 72 (atom -> number .)
    SEMICOLON       reduce using rule 72 (atom -> number .)
    LBRACK          reduce using rule 72 (atom -> number .)
    RETURN          reduce using rule 72 (atom -> number .)
    BREAK           reduce using rule 72 (atom -> number .)
    CONTINUE        reduce using rule 72 (atom -> number .)
    NAME            reduce using rule 72 (atom -> number .)
    TRAIN           reduce using rule 72 (atom -> number .)
    PRED            reduce using rule 72 (atom -> number .)
    SAVE            reduce using rule 72 (atom -> number .)
    CHAT            reduce using rule 72 (atom -> number .)
    LPAREN          reduce using rule 72 (atom -> number .)
    TRUE            reduce using rule 72 (atom -> number .)
    FALSE           reduce using rule 72 (atom -> number .)
    NONE            reduce using rule 72 (atom -> number .)
    INT             reduce using rule 72 (atom -> number .)
    FLOAT           reduce using rule 72 (atom -> number .)
    STRING          reduce using rule 72 (atom -> number .)
    RPAREN          reduce using rule 72 (atom -> number .)
    COMMA           reduce using rule 72 (atom -> number .)
    RSQBRACK        reduce using rule 72 (atom -> number .)
    COLON           reduce using rule 72 (atom -> number .)


state 43

    (73) atom -> string .

    LSQBRACK        reduce using rule 73 (atom -> string .)
    GT              reduce using rule 73 (atom -> string .)
    LT              reduce using rule 73 (atom -> string .)
    GTE             reduce using rule 73 (atom -> string .)
    LTE             reduce using rule 73 (atom -> string .)
    EQ              reduce using rule 73 (atom -> string .)
    NEQ             reduce using rule 73 (atom -> string .)
    PLUS            reduce using rule 73 (atom -> string .)
    MINUS           reduce using rule 73 (atom -> string .)
    TIMES           reduce using rule 73 (atom -> string .)
    DIVIDE          reduce using rule 73 (atom -> string .)
    MOD             reduce using rule 73 (atom -> string .)
    OR              reduce using rule 73 (atom -> string .)
    AND             reduce using rule 73 (atom -> string .)
    SEMICOLON       reduce using rule 73 (atom -> string .)
    LBRACK          reduce using rule 73 (atom -> string .)
    RETURN          reduce using rule 73 (atom -> string .)
    BREAK           reduce using rule 73 (atom -> string .)
    CONTINUE        reduce using rule 73 (atom -> string .)
    NAME            reduce using rule 73 (atom -> string .)
    TRAIN           reduce using rule 73 (atom -> string .)
    PRED            reduce using rule 73 (atom -> string .)
    SAVE            reduce using rule 73 (atom -> string .)
    CHAT            reduce using rule 73 (atom -> string .)
    LPAREN          reduce using rule 73 (atom -> string .)
    TRUE            reduce using rule 73 (atom -> string .)
    FALSE           reduce using rule 73 (atom -> string .)
    NONE            reduce using rule 73 (atom -> string .)
    INT             reduce using rule 73 (atom -> string .)
    FLOAT           reduce using rule 73 (atom -> string .)
    STRING          reduce using rule 73 (atom -> string .)
    RPAREN          reduce using rule 73 (atom -> string .)
    COMMA           reduce using rule 73 (atom -> string .)
    RSQBRACK        reduce using rule 73 (atom -> string .)
    COLON           reduce using rule 73 (atom -> string .)


state 44

    (74) atom -> TRUE .

    LSQBRACK        reduce using rule 74 (atom -> TRUE .)
    GT              reduce using rule 74 (atom -> TRUE .)
    LT              reduce using rule 74 (atom -> TRUE .)
    GTE             reduce using rule 74 (atom -> TRUE .)
    LTE             reduce using rule 74 (atom -> TRUE .)
    EQ              reduce using rule 74 (atom -> TRUE .)
    NEQ             reduce using rule 74 (atom -> TRUE .)
    PLUS            reduce using rule 74 (atom -> TRUE .)
    MINUS           reduce using rule 74 (atom -> TRUE .)
    TIMES           reduce using rule 74 (atom -> TRUE .)
    DIVIDE          reduce using rule 74 (atom -> TRUE .)
    MOD             reduce using rule 74 (atom -> TRUE .)
    OR              reduce using rule 74 (atom -> TRUE .)
    AND             reduce using rule 74 (atom -> TRUE .)
    SEMICOLON       reduce using rule 74 (atom -> TRUE .)
    LBRACK          reduce using rule 74 (atom -> TRUE .)
    RETURN          reduce using rule 74 (atom -> TRUE .)
    BREAK           reduce using rule 74 (atom -> TRUE .)
    CONTINUE        reduce using rule 74 (atom -> TRUE .)
    NAME            reduce using rule 74 (atom -> TRUE .)
    TRAIN           reduce using rule 74 (atom -> TRUE .)
    PRED            reduce using rule 74 (atom -> TRUE .)
    SAVE            reduce using rule 74 (atom -> TRUE .)
    CHAT            reduce using rule 74 (atom -> TRUE .)
    LPAREN          reduce using rule 74 (atom -> TRUE .)
    TRUE            reduce using rule 74 (atom -> TRUE .)
    FALSE           reduce using rule 74 (atom -> TRUE .)
    NONE            reduce using rule 74 (atom -> TRUE .)
    INT             reduce using rule 74 (atom -> TRUE .)
    FLOAT           reduce using rule 74 (atom -> TRUE .)
    STRING          reduce using rule 74 (atom -> TRUE .)
    RPAREN          reduce using rule 74 (atom -> TRUE .)
    COMMA           reduce using rule 74 (atom -> TRUE .)
    RSQBRACK        reduce using rule 74 (atom -> TRUE .)
    COLON           reduce using rule 74 (atom -> TRUE .)


state 45

    (75) atom -> FALSE .

    LSQBRACK        reduce using rule 75 (atom -> FALSE .)
    GT              reduce using rule 75 (atom -> FALSE .)
    LT              reduce using rule 75 (atom -> FALSE .)
    GTE             reduce using rule 75 (atom -> FALSE .)
    LTE             reduce using rule 75 (atom -> FALSE .)
    EQ              reduce using rule 75 (atom -> FALSE .)
    NEQ             reduce using rule 75 (atom -> FALSE .)
    PLUS            reduce using rule 75 (atom -> FALSE .)
    MINUS           reduce using rule 75 (atom -> FALSE .)
    TIMES           reduce using rule 75 (atom -> FALSE .)
    DIVIDE          reduce using rule 75 (atom -> FALSE .)
    MOD             reduce using rule 75 (atom -> FALSE .)
    OR              reduce using rule 75 (atom -> FALSE .)
    AND             reduce using rule 75 (atom -> FALSE .)
    SEMICOLON       reduce using rule 75 (atom -> FALSE .)
    LBRACK          reduce using rule 75 (atom -> FALSE .)
    RETURN          reduce using rule 75 (atom -> FALSE .)
    BREAK           reduce using rule 75 (atom -> FALSE .)
    CONTINUE        reduce using rule 75 (atom -> FALSE .)
    NAME            reduce using rule 75 (atom -> FALSE .)
    TRAIN           reduce using rule 75 (atom -> FALSE .)
    PRED            reduce using rule 75 (atom -> FALSE .)
    SAVE            reduce using rule 75 (atom -> FALSE .)
    CHAT            reduce using rule 75 (atom -> FALSE .)
    LPAREN          reduce using rule 75 (atom -> FALSE .)
    TRUE            reduce using rule 75 (atom -> FALSE .)
    FALSE           reduce using rule 75 (atom -> FALSE .)
    NONE            reduce using rule 75 (atom -> FALSE .)
    INT             reduce using rule 75 (atom -> FALSE .)
    FLOAT           reduce using rule 75 (atom -> FALSE .)
    STRING          reduce using rule 75 (atom -> FALSE .)
    RPAREN          reduce using rule 75 (atom -> FALSE .)
    COMMA           reduce using rule 75 (atom -> FALSE .)
    RSQBRACK        reduce using rule 75 (atom -> FALSE .)
    COLON           reduce using rule 75 (atom -> FALSE .)


state 46

    (76) atom -> NONE .

    LSQBRACK        reduce using rule 76 (atom -> NONE .)
    GT              reduce using rule 76 (atom -> NONE .)
    LT              reduce using rule 76 (atom -> NONE .)
    GTE             reduce using rule 76 (atom -> NONE .)
    LTE             reduce using rule 76 (atom -> NONE .)
    EQ              reduce using rule 76 (atom -> NONE .)
    NEQ             reduce using rule 76 (atom -> NONE .)
    PLUS            reduce using rule 76 (atom -> NONE .)
    MINUS           reduce using rule 76 (atom -> NONE .)
    TIMES           reduce using rule 76 (atom -> NONE .)
    DIVIDE          reduce using rule 76 (atom -> NONE .)
    MOD             reduce using rule 76 (atom -> NONE .)
    OR              reduce using rule 76 (atom -> NONE .)
    AND             reduce using rule 76 (atom -> NONE .)
    SEMICOLON       reduce using rule 76 (atom -> NONE .)
    LBRACK          reduce using rule 76 (atom -> NONE .)
    RETURN          reduce using rule 76 (atom -> NONE .)
    BREAK           reduce using rule 76 (atom -> NONE .)
    CONTINUE        reduce using rule 76 (atom -> NONE .)
    NAME            reduce using rule 76 (atom -> NONE .)
    TRAIN           reduce using rule 76 (atom -> NONE .)
    PRED            reduce using rule 76 (atom -> NONE .)
    SAVE            reduce using rule 76 (atom -> NONE .)
    CHAT            reduce using rule 76 (atom -> NONE .)
    LPAREN          reduce using rule 76 (atom -> NONE .)
    TRUE            reduce using rule 76 (atom -> NONE .)
    FALSE           reduce using rule 76 (atom -> NONE .)
    NONE            reduce using rule 76 (atom -> NONE .)
    INT             reduce using rule 76 (atom -> NONE .)
    FLOAT           reduce using rule 76 (atom -> NONE .)
    STRING          reduce using rule 76 (atom -> NONE .)
    RPAREN          reduce using rule 76 (atom -> NONE .)
    COMMA           reduce using rule 76 (atom -> NONE .)
    RSQBRACK        reduce using rule 76 (atom -> NONE .)
    COLON           reduce using rule 76 (atom -> NONE .)


state 47

    (81) number -> INT .

    LSQBRACK        reduce using rule 81 (number -> INT .)
    GT              reduce using rule 81 (number -> INT .)
    LT              reduce using rule 81 (number -> INT .)
    GTE             reduce using rule 81 (number -> INT .)
    LTE             reduce using rule 81 (number -> INT .)
    EQ              reduce using rule 81 (number -> INT .)
    NEQ             reduce using rule 81 (number -> INT .)
    PLUS            reduce using rule 81 (number -> INT .)
    MINUS           reduce using rule 81 (number -> INT .)
    TIMES           reduce using rule 81 (number -> INT .)
    DIVIDE          reduce using rule 81 (number -> INT .)
    MOD             reduce using rule 81 (number -> INT .)
    OR              reduce using rule 81 (number -> INT .)
    AND             reduce using rule 81 (number -> INT .)
    SEMICOLON       reduce using rule 81 (number -> INT .)
    LBRACK          reduce using rule 81 (number -> INT .)
    RETURN          reduce using rule 81 (number -> INT .)
    BREAK           reduce using rule 81 (number -> INT .)
    CONTINUE        reduce using rule 81 (number -> INT .)
    NAME            reduce using rule 81 (number -> INT .)
    TRAIN           reduce using rule 81 (number -> INT .)
    PRED            reduce using rule 81 (number -> INT .)
    SAVE            reduce using rule 81 (number -> INT .)
    CHAT            reduce using rule 81 (number -> INT .)
    LPAREN          reduce using rule 81 (number -> INT .)
    TRUE            reduce using rule 81 (number -> INT .)
    FALSE           reduce using rule 81 (number -> INT .)
    NONE            reduce using rule 81 (number -> INT .)
    INT             reduce using rule 81 (number -> INT .)
    FLOAT           reduce using rule 81 (number -> INT .)
    STRING          reduce using rule 81 (number -> INT .)
    RPAREN          reduce using rule 81 (number -> INT .)
    COMMA           reduce using rule 81 (number -> INT .)
    RSQBRACK        reduce using rule 81 (number -> INT .)
    COLON           reduce using rule 81 (number -> INT .)


state 48

    (82) number -> FLOAT .

    LSQBRACK        reduce using rule 82 (number -> FLOAT .)
    GT              reduce using rule 82 (number -> FLOAT .)
    LT              reduce using rule 82 (number -> FLOAT .)
    GTE             reduce using rule 82 (number -> FLOAT .)
    LTE             reduce using rule 82 (number -> FLOAT .)
    EQ              reduce using rule 82 (number -> FLOAT .)
    NEQ             reduce using rule 82 (number -> FLOAT .)
    PLUS            reduce using rule 82 (number -> FLOAT .)
    MINUS           reduce using rule 82 (number -> FLOAT .)
    TIMES           reduce using rule 82 (number -> FLOAT .)
    DIVIDE          reduce using rule 82 (number -> FLOAT .)
    MOD             reduce using rule 82 (number -> FLOAT .)
    OR              reduce using rule 82 (number -> FLOAT .)
    AND             reduce using rule 82 (number -> FLOAT .)
    SEMICOLON       reduce using rule 82 (number -> FLOAT .)
    LBRACK          reduce using rule 82 (number -> FLOAT .)
    RETURN          reduce using rule 82 (number -> FLOAT .)
    BREAK           reduce using rule 82 (number -> FLOAT .)
    CONTINUE        reduce using rule 82 (number -> FLOAT .)
    NAME            reduce using rule 82 (number -> FLOAT .)
    TRAIN           reduce using rule 82 (number -> FLOAT .)
    PRED            reduce using rule 82 (number -> FLOAT .)
    SAVE            reduce using rule 82 (number -> FLOAT .)
    CHAT            reduce using rule 82 (number -> FLOAT .)
    LPAREN          reduce using rule 82 (number -> FLOAT .)
    TRUE            reduce using rule 82 (number -> FLOAT .)
    FALSE           reduce using rule 82 (number -> FLOAT .)
    NONE            reduce using rule 82 (number -> FLOAT .)
    INT             reduce using rule 82 (number -> FLOAT .)
    FLOAT           reduce using rule 82 (number -> FLOAT .)
    STRING          reduce using rule 82 (number -> FLOAT .)
    RPAREN          reduce using rule 82 (number -> FLOAT .)
    COMMA           reduce using rule 82 (number -> FLOAT .)
    RSQBRACK        reduce using rule 82 (number -> FLOAT .)
    COLON           reduce using rule 82 (number -> FLOAT .)


state 49

    (2) stmt_list -> stmt_list stmt .

    IF              reduce using rule 2 (stmt_list -> stmt_list stmt .)
    WHILE           reduce using rule 2 (stmt_list -> stmt_list stmt .)
    DEF             reduce using rule 2 (stmt_list -> stmt_list stmt .)
    PRINT           reduce using rule 2 (stmt_list -> stmt_list stmt .)
    RETURN          reduce using rule 2 (stmt_list -> stmt_list stmt .)
    BREAK           reduce using rule 2 (stmt_list -> stmt_list stmt .)
    CONTINUE        reduce using rule 2 (stmt_list -> stmt_list stmt .)
    NAME            reduce using rule 2 (stmt_list -> stmt_list stmt .)
    TRAIN           reduce using rule 2 (stmt_list -> stmt_list stmt .)
    PRED            reduce using rule 2 (stmt_list -> stmt_list stmt .)
    SAVE            reduce using rule 2 (stmt_list -> stmt_list stmt .)
    CHAT            reduce using rule 2 (stmt_list -> stmt_list stmt .)
    PLUS            reduce using rule 2 (stmt_list -> stmt_list stmt .)
    MINUS           reduce using rule 2 (stmt_list -> stmt_list stmt .)
    LPAREN          reduce using rule 2 (stmt_list -> stmt_list stmt .)
    LSQBRACK        reduce using rule 2 (stmt_list -> stmt_list stmt .)
    TRUE            reduce using rule 2 (stmt_list -> stmt_list stmt .)
    FALSE           reduce using rule 2 (stmt_list -> stmt_list stmt .)
    NONE            reduce using rule 2 (stmt_list -> stmt_list stmt .)
    INT             reduce using rule 2 (stmt_list -> stmt_list stmt .)
    FLOAT           reduce using rule 2 (stmt_list -> stmt_list stmt .)
    STRING          reduce using rule 2 (stmt_list -> stmt_list stmt .)
    $end            reduce using rule 2 (stmt_list -> stmt_list stmt .)
    RBRACK          reduce using rule 2 (stmt_list -> stmt_list stmt .)


state 50

    (10) simple_stmt -> small_stmt SEMICOLON .

    IF              reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    WHILE           reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    DEF             reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    PRINT           reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    RETURN          reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    BREAK           reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    CONTINUE        reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    NAME            reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    TRAIN           reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    PRED            reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    SAVE            reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    CHAT            reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    PLUS            reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    MINUS           reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    LPAREN          reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    LSQBRACK        reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    TRUE            reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    FALSE           reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    NONE            reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    INT             reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    FLOAT           reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    STRING          reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    $end            reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    ELSE            reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)
    RBRACK          reduce using rule 10 (simple_stmt -> small_stmt SEMICOLON .)


state 51

    (30) if_stmt -> IF test . suite
    (31) if_stmt -> IF test . suite ELSE suite
    (34) suite -> . simple_stmt
    (35) suite -> . LBRACK stmt_list RBRACK
    (10) simple_stmt -> . small_stmt SEMICOLON
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    LBRACK          shift and go to state 86
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    test                           shift and go to state 11
    suite                          shift and go to state 84
    simple_stmt                    shift and go to state 85
    small_stmt                     shift and go to state 6
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    name                           shift and go to state 18
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 52

    (80) name -> NAME .

    LPAREN          reduce using rule 80 (name -> NAME .)
    LSQBRACK        reduce using rule 80 (name -> NAME .)
    GT              reduce using rule 80 (name -> NAME .)
    LT              reduce using rule 80 (name -> NAME .)
    GTE             reduce using rule 80 (name -> NAME .)
    LTE             reduce using rule 80 (name -> NAME .)
    EQ              reduce using rule 80 (name -> NAME .)
    NEQ             reduce using rule 80 (name -> NAME .)
    PLUS            reduce using rule 80 (name -> NAME .)
    MINUS           reduce using rule 80 (name -> NAME .)
    TIMES           reduce using rule 80 (name -> NAME .)
    DIVIDE          reduce using rule 80 (name -> NAME .)
    MOD             reduce using rule 80 (name -> NAME .)
    OR              reduce using rule 80 (name -> NAME .)
    AND             reduce using rule 80 (name -> NAME .)
    LBRACK          reduce using rule 80 (name -> NAME .)
    RETURN          reduce using rule 80 (name -> NAME .)
    BREAK           reduce using rule 80 (name -> NAME .)
    CONTINUE        reduce using rule 80 (name -> NAME .)
    NAME            reduce using rule 80 (name -> NAME .)
    TRAIN           reduce using rule 80 (name -> NAME .)
    PRED            reduce using rule 80 (name -> NAME .)
    SAVE            reduce using rule 80 (name -> NAME .)
    CHAT            reduce using rule 80 (name -> NAME .)
    TRUE            reduce using rule 80 (name -> NAME .)
    FALSE           reduce using rule 80 (name -> NAME .)
    NONE            reduce using rule 80 (name -> NAME .)
    INT             reduce using rule 80 (name -> NAME .)
    FLOAT           reduce using rule 80 (name -> NAME .)
    STRING          reduce using rule 80 (name -> NAME .)
    RPAREN          reduce using rule 80 (name -> NAME .)
    COMMA           reduce using rule 80 (name -> NAME .)
    SEMICOLON       reduce using rule 80 (name -> NAME .)
    RSQBRACK        reduce using rule 80 (name -> NAME .)
    COLON           reduce using rule 80 (name -> NAME .)


state 53

    (28) while_stmt -> WHILE test . suite
    (29) while_stmt -> WHILE test . suite ELSE suite
    (34) suite -> . simple_stmt
    (35) suite -> . LBRACK stmt_list RBRACK
    (10) simple_stmt -> . small_stmt SEMICOLON
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    LBRACK          shift and go to state 86
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    test                           shift and go to state 11
    suite                          shift and go to state 87
    simple_stmt                    shift and go to state 85
    small_stmt                     shift and go to state 6
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    name                           shift and go to state 18
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 54

    (32) funcdef_stmt -> DEF name . LPAREN list_expr RPAREN suite
    (33) funcdef_stmt -> DEF name . LPAREN RPAREN suite

    LPAREN          shift and go to state 88


state 55

    (68) atom_expr -> name LPAREN . list_expr RPAREN
    (78) list_expr -> . list_expr COMMA expr
    (79) list_expr -> . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    name                           shift and go to state 18
    list_expr                      shift and go to state 89
    expr                           shift and go to state 58
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 56

    (77) atom -> name LSQBRACK . atom RSQBRACK
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    name                           shift and go to state 90
    atom                           shift and go to state 91
    number                         shift and go to state 42
    string                         shift and go to state 43

state 57

    (69) atom -> LPAREN list_expr . RPAREN
    (78) list_expr -> list_expr . COMMA expr

    RPAREN          shift and go to state 92
    COMMA           shift and go to state 93


state 58

    (79) list_expr -> expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    RPAREN          reduce using rule 79 (list_expr -> expr .)
    COMMA           reduce using rule 79 (list_expr -> expr .)
    SEMICOLON       reduce using rule 79 (list_expr -> expr .)
    RSQBRACK        reduce using rule 79 (list_expr -> expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75


state 59

    (15) print -> PRINT LPAREN . small_stmt RPAREN SEMICOLON
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    small_stmt                     shift and go to state 94
    test                           shift and go to state 11
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    name                           shift and go to state 18
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 60

    (36) test -> comparison OR . test
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    comparison                     shift and go to state 21
    test                           shift and go to state 95
    expr                           shift and go to state 30
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 61

    (37) test -> comparison AND . test
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    comparison                     shift and go to state 21
    test                           shift and go to state 96
    expr                           shift and go to state 30
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 62

    (25) flow_stmt -> RETURN list_expr .
    (78) list_expr -> list_expr . COMMA expr

    SEMICOLON       reduce using rule 25 (flow_stmt -> RETURN list_expr .)
    RPAREN          reduce using rule 25 (flow_stmt -> RETURN list_expr .)
    COMMA           shift and go to state 93


state 63

    (52) assign_expr -> NAME ASSIGN . expr
    (56) assign_expr -> NAME ASSIGN . SCAN LPAREN RPAREN
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    SCAN            shift and go to state 98
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 97
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 64

    (53) assign_expr -> NAME COLON . basic_type ASSIGN expr
    (54) assign_expr -> NAME COLON . basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> NAME COLON . basic_type ASSIGN list_expr COLON STRING
    (46) basic_type -> . INT_TYPE
    (47) basic_type -> . FLOAT_TYPE
    (48) basic_type -> . LIST_TYPE
    (49) basic_type -> . TUPLE_TYPE
    (50) basic_type -> . MLP
    (51) basic_type -> . TRANSFORMER

    INT_TYPE        shift and go to state 100
    FLOAT_TYPE      shift and go to state 101
    LIST_TYPE       shift and go to state 102
    TUPLE_TYPE      shift and go to state 103
    MLP             shift and go to state 104
    TRANSFORMER     shift and go to state 105

    basic_type                     shift and go to state 99

state 65

    (39) comparison -> expr GT . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 106
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 66

    (40) comparison -> expr LT . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 107
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 67

    (41) comparison -> expr GTE . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 108
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 68

    (42) comparison -> expr LTE . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 109
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 69

    (43) comparison -> expr EQ . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 110
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 70

    (44) comparison -> expr NEQ . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 111
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 71

    (57) expr -> expr PLUS . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 112
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 72

    (58) expr -> expr MINUS . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 113
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 73

    (59) expr -> expr TIMES . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 114
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 74

    (60) expr -> expr DIVIDE . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 115
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 75

    (61) expr -> expr MOD . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 116
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 76

    (20) train_stmt -> TRAIN name . list_expr
    (78) list_expr -> . list_expr COMMA expr
    (79) list_expr -> . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    name                           shift and go to state 18
    list_expr                      shift and go to state 117
    expr                           shift and go to state 58
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 77

    (21) pred_stmt -> PRED name . STRING

    STRING          shift and go to state 118


state 78

    (22) save_stmt -> SAVE name . STRING

    STRING          shift and go to state 119


state 79

    (23) chat_stmt -> CHAT name . name
    (80) name -> . NAME

    NAME            shift and go to state 52

    name                           shift and go to state 120

state 80

    (63) factor -> PLUS factor .

    GT              reduce using rule 63 (factor -> PLUS factor .)
    LT              reduce using rule 63 (factor -> PLUS factor .)
    GTE             reduce using rule 63 (factor -> PLUS factor .)
    LTE             reduce using rule 63 (factor -> PLUS factor .)
    EQ              reduce using rule 63 (factor -> PLUS factor .)
    NEQ             reduce using rule 63 (factor -> PLUS factor .)
    PLUS            reduce using rule 63 (factor -> PLUS factor .)
    MINUS           reduce using rule 63 (factor -> PLUS factor .)
    TIMES           reduce using rule 63 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 63 (factor -> PLUS factor .)
    MOD             reduce using rule 63 (factor -> PLUS factor .)
    OR              reduce using rule 63 (factor -> PLUS factor .)
    AND             reduce using rule 63 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 63 (factor -> PLUS factor .)
    LBRACK          reduce using rule 63 (factor -> PLUS factor .)
    RETURN          reduce using rule 63 (factor -> PLUS factor .)
    BREAK           reduce using rule 63 (factor -> PLUS factor .)
    CONTINUE        reduce using rule 63 (factor -> PLUS factor .)
    NAME            reduce using rule 63 (factor -> PLUS factor .)
    TRAIN           reduce using rule 63 (factor -> PLUS factor .)
    PRED            reduce using rule 63 (factor -> PLUS factor .)
    SAVE            reduce using rule 63 (factor -> PLUS factor .)
    CHAT            reduce using rule 63 (factor -> PLUS factor .)
    LPAREN          reduce using rule 63 (factor -> PLUS factor .)
    LSQBRACK        reduce using rule 63 (factor -> PLUS factor .)
    TRUE            reduce using rule 63 (factor -> PLUS factor .)
    FALSE           reduce using rule 63 (factor -> PLUS factor .)
    NONE            reduce using rule 63 (factor -> PLUS factor .)
    INT             reduce using rule 63 (factor -> PLUS factor .)
    FLOAT           reduce using rule 63 (factor -> PLUS factor .)
    STRING          reduce using rule 63 (factor -> PLUS factor .)
    RPAREN          reduce using rule 63 (factor -> PLUS factor .)
    COMMA           reduce using rule 63 (factor -> PLUS factor .)
    RSQBRACK        reduce using rule 63 (factor -> PLUS factor .)
    COLON           reduce using rule 63 (factor -> PLUS factor .)


state 81

    (64) factor -> MINUS factor .

    GT              reduce using rule 64 (factor -> MINUS factor .)
    LT              reduce using rule 64 (factor -> MINUS factor .)
    GTE             reduce using rule 64 (factor -> MINUS factor .)
    LTE             reduce using rule 64 (factor -> MINUS factor .)
    EQ              reduce using rule 64 (factor -> MINUS factor .)
    NEQ             reduce using rule 64 (factor -> MINUS factor .)
    PLUS            reduce using rule 64 (factor -> MINUS factor .)
    MINUS           reduce using rule 64 (factor -> MINUS factor .)
    TIMES           reduce using rule 64 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 64 (factor -> MINUS factor .)
    MOD             reduce using rule 64 (factor -> MINUS factor .)
    OR              reduce using rule 64 (factor -> MINUS factor .)
    AND             reduce using rule 64 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 64 (factor -> MINUS factor .)
    LBRACK          reduce using rule 64 (factor -> MINUS factor .)
    RETURN          reduce using rule 64 (factor -> MINUS factor .)
    BREAK           reduce using rule 64 (factor -> MINUS factor .)
    CONTINUE        reduce using rule 64 (factor -> MINUS factor .)
    NAME            reduce using rule 64 (factor -> MINUS factor .)
    TRAIN           reduce using rule 64 (factor -> MINUS factor .)
    PRED            reduce using rule 64 (factor -> MINUS factor .)
    SAVE            reduce using rule 64 (factor -> MINUS factor .)
    CHAT            reduce using rule 64 (factor -> MINUS factor .)
    LPAREN          reduce using rule 64 (factor -> MINUS factor .)
    LSQBRACK        reduce using rule 64 (factor -> MINUS factor .)
    TRUE            reduce using rule 64 (factor -> MINUS factor .)
    FALSE           reduce using rule 64 (factor -> MINUS factor .)
    NONE            reduce using rule 64 (factor -> MINUS factor .)
    INT             reduce using rule 64 (factor -> MINUS factor .)
    FLOAT           reduce using rule 64 (factor -> MINUS factor .)
    STRING          reduce using rule 64 (factor -> MINUS factor .)
    RPAREN          reduce using rule 64 (factor -> MINUS factor .)
    COMMA           reduce using rule 64 (factor -> MINUS factor .)
    RSQBRACK        reduce using rule 64 (factor -> MINUS factor .)
    COLON           reduce using rule 64 (factor -> MINUS factor .)


state 82

    (67) atom_expr -> atom_expr LSQBRACK . expr RSQBRACK
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    atom_expr                      shift and go to state 39
    expr                           shift and go to state 121
    factor                         shift and go to state 38
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 83

    (70) atom -> LSQBRACK list_expr . RSQBRACK
    (78) list_expr -> list_expr . COMMA expr

    RSQBRACK        shift and go to state 122
    COMMA           shift and go to state 93


state 84

    (30) if_stmt -> IF test suite .
    (31) if_stmt -> IF test suite . ELSE suite

    IF              reduce using rule 30 (if_stmt -> IF test suite .)
    WHILE           reduce using rule 30 (if_stmt -> IF test suite .)
    DEF             reduce using rule 30 (if_stmt -> IF test suite .)
    PRINT           reduce using rule 30 (if_stmt -> IF test suite .)
    RETURN          reduce using rule 30 (if_stmt -> IF test suite .)
    BREAK           reduce using rule 30 (if_stmt -> IF test suite .)
    CONTINUE        reduce using rule 30 (if_stmt -> IF test suite .)
    NAME            reduce using rule 30 (if_stmt -> IF test suite .)
    TRAIN           reduce using rule 30 (if_stmt -> IF test suite .)
    PRED            reduce using rule 30 (if_stmt -> IF test suite .)
    SAVE            reduce using rule 30 (if_stmt -> IF test suite .)
    CHAT            reduce using rule 30 (if_stmt -> IF test suite .)
    PLUS            reduce using rule 30 (if_stmt -> IF test suite .)
    MINUS           reduce using rule 30 (if_stmt -> IF test suite .)
    LPAREN          reduce using rule 30 (if_stmt -> IF test suite .)
    LSQBRACK        reduce using rule 30 (if_stmt -> IF test suite .)
    TRUE            reduce using rule 30 (if_stmt -> IF test suite .)
    FALSE           reduce using rule 30 (if_stmt -> IF test suite .)
    NONE            reduce using rule 30 (if_stmt -> IF test suite .)
    INT             reduce using rule 30 (if_stmt -> IF test suite .)
    FLOAT           reduce using rule 30 (if_stmt -> IF test suite .)
    STRING          reduce using rule 30 (if_stmt -> IF test suite .)
    $end            reduce using rule 30 (if_stmt -> IF test suite .)
    RBRACK          reduce using rule 30 (if_stmt -> IF test suite .)
    ELSE            shift and go to state 123


state 85

    (34) suite -> simple_stmt .

    ELSE            reduce using rule 34 (suite -> simple_stmt .)
    IF              reduce using rule 34 (suite -> simple_stmt .)
    WHILE           reduce using rule 34 (suite -> simple_stmt .)
    DEF             reduce using rule 34 (suite -> simple_stmt .)
    PRINT           reduce using rule 34 (suite -> simple_stmt .)
    RETURN          reduce using rule 34 (suite -> simple_stmt .)
    BREAK           reduce using rule 34 (suite -> simple_stmt .)
    CONTINUE        reduce using rule 34 (suite -> simple_stmt .)
    NAME            reduce using rule 34 (suite -> simple_stmt .)
    TRAIN           reduce using rule 34 (suite -> simple_stmt .)
    PRED            reduce using rule 34 (suite -> simple_stmt .)
    SAVE            reduce using rule 34 (suite -> simple_stmt .)
    CHAT            reduce using rule 34 (suite -> simple_stmt .)
    PLUS            reduce using rule 34 (suite -> simple_stmt .)
    MINUS           reduce using rule 34 (suite -> simple_stmt .)
    LPAREN          reduce using rule 34 (suite -> simple_stmt .)
    LSQBRACK        reduce using rule 34 (suite -> simple_stmt .)
    TRUE            reduce using rule 34 (suite -> simple_stmt .)
    FALSE           reduce using rule 34 (suite -> simple_stmt .)
    NONE            reduce using rule 34 (suite -> simple_stmt .)
    INT             reduce using rule 34 (suite -> simple_stmt .)
    FLOAT           reduce using rule 34 (suite -> simple_stmt .)
    STRING          reduce using rule 34 (suite -> simple_stmt .)
    $end            reduce using rule 34 (suite -> simple_stmt .)
    RBRACK          reduce using rule 34 (suite -> simple_stmt .)


state 86

    (35) suite -> LBRACK . stmt_list RBRACK
    (2) stmt_list -> . stmt_list stmt
    (3) stmt_list -> . stmt
    (4) stmt -> . simple_stmt
    (5) stmt -> . compound_stmt
    (10) simple_stmt -> . small_stmt SEMICOLON
    (6) compound_stmt -> . if_stmt
    (7) compound_stmt -> . while_stmt
    (8) compound_stmt -> . funcdef_stmt
    (9) compound_stmt -> . print
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (30) if_stmt -> . IF test suite
    (31) if_stmt -> . IF test suite ELSE suite
    (28) while_stmt -> . WHILE test suite
    (29) while_stmt -> . WHILE test suite ELSE suite
    (32) funcdef_stmt -> . DEF name LPAREN list_expr RPAREN suite
    (33) funcdef_stmt -> . DEF name LPAREN RPAREN suite
    (15) print -> . PRINT LPAREN small_stmt RPAREN SEMICOLON
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    IF              shift and go to state 15
    WHILE           shift and go to state 16
    DEF             shift and go to state 17
    PRINT           shift and go to state 20
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    stmt_list                      shift and go to state 124
    stmt                           shift and go to state 3
    simple_stmt                    shift and go to state 4
    compound_stmt                  shift and go to state 5
    small_stmt                     shift and go to state 6
    if_stmt                        shift and go to state 7
    while_stmt                     shift and go to state 8
    funcdef_stmt                   shift and go to state 9
    print                          shift and go to state 10
    test                           shift and go to state 11
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    name                           shift and go to state 18
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 87

    (28) while_stmt -> WHILE test suite .
    (29) while_stmt -> WHILE test suite . ELSE suite

    IF              reduce using rule 28 (while_stmt -> WHILE test suite .)
    WHILE           reduce using rule 28 (while_stmt -> WHILE test suite .)
    DEF             reduce using rule 28 (while_stmt -> WHILE test suite .)
    PRINT           reduce using rule 28 (while_stmt -> WHILE test suite .)
    RETURN          reduce using rule 28 (while_stmt -> WHILE test suite .)
    BREAK           reduce using rule 28 (while_stmt -> WHILE test suite .)
    CONTINUE        reduce using rule 28 (while_stmt -> WHILE test suite .)
    NAME            reduce using rule 28 (while_stmt -> WHILE test suite .)
    TRAIN           reduce using rule 28 (while_stmt -> WHILE test suite .)
    PRED            reduce using rule 28 (while_stmt -> WHILE test suite .)
    SAVE            reduce using rule 28 (while_stmt -> WHILE test suite .)
    CHAT            reduce using rule 28 (while_stmt -> WHILE test suite .)
    PLUS            reduce using rule 28 (while_stmt -> WHILE test suite .)
    MINUS           reduce using rule 28 (while_stmt -> WHILE test suite .)
    LPAREN          reduce using rule 28 (while_stmt -> WHILE test suite .)
    LSQBRACK        reduce using rule 28 (while_stmt -> WHILE test suite .)
    TRUE            reduce using rule 28 (while_stmt -> WHILE test suite .)
    FALSE           reduce using rule 28 (while_stmt -> WHILE test suite .)
    NONE            reduce using rule 28 (while_stmt -> WHILE test suite .)
    INT             reduce using rule 28 (while_stmt -> WHILE test suite .)
    FLOAT           reduce using rule 28 (while_stmt -> WHILE test suite .)
    STRING          reduce using rule 28 (while_stmt -> WHILE test suite .)
    $end            reduce using rule 28 (while_stmt -> WHILE test suite .)
    RBRACK          reduce using rule 28 (while_stmt -> WHILE test suite .)
    ELSE            shift and go to state 125


state 88

    (32) funcdef_stmt -> DEF name LPAREN . list_expr RPAREN suite
    (33) funcdef_stmt -> DEF name LPAREN . RPAREN suite
    (78) list_expr -> . list_expr COMMA expr
    (79) list_expr -> . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    RPAREN          shift and go to state 127
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    name                           shift and go to state 18
    list_expr                      shift and go to state 126
    expr                           shift and go to state 58
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 89

    (68) atom_expr -> name LPAREN list_expr . RPAREN
    (78) list_expr -> list_expr . COMMA expr

    RPAREN          shift and go to state 128
    COMMA           shift and go to state 93


state 90

    (71) atom -> name .
    (77) atom -> name . LSQBRACK atom RSQBRACK

    RSQBRACK        reduce using rule 71 (atom -> name .)
    LSQBRACK        shift and go to state 56


state 91

    (77) atom -> name LSQBRACK atom . RSQBRACK

    RSQBRACK        shift and go to state 129


state 92

    (69) atom -> LPAREN list_expr RPAREN .

    LSQBRACK        reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    GT              reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    LT              reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    GTE             reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    LTE             reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    EQ              reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    NEQ             reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    PLUS            reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    MINUS           reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    TIMES           reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    DIVIDE          reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    MOD             reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    OR              reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    AND             reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    SEMICOLON       reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    LBRACK          reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    RETURN          reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    BREAK           reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    CONTINUE        reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    NAME            reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    TRAIN           reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    PRED            reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    SAVE            reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    CHAT            reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    LPAREN          reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    TRUE            reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    FALSE           reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    NONE            reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    INT             reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    FLOAT           reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    STRING          reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    RPAREN          reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    COMMA           reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    RSQBRACK        reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)
    COLON           reduce using rule 69 (atom -> LPAREN list_expr RPAREN .)


state 93

    (78) list_expr -> list_expr COMMA . expr
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    expr                           shift and go to state 130
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 94

    (15) print -> PRINT LPAREN small_stmt . RPAREN SEMICOLON

    RPAREN          shift and go to state 131


state 95

    (36) test -> comparison OR test .

    SEMICOLON       reduce using rule 36 (test -> comparison OR test .)
    LBRACK          reduce using rule 36 (test -> comparison OR test .)
    RETURN          reduce using rule 36 (test -> comparison OR test .)
    BREAK           reduce using rule 36 (test -> comparison OR test .)
    CONTINUE        reduce using rule 36 (test -> comparison OR test .)
    NAME            reduce using rule 36 (test -> comparison OR test .)
    TRAIN           reduce using rule 36 (test -> comparison OR test .)
    PRED            reduce using rule 36 (test -> comparison OR test .)
    SAVE            reduce using rule 36 (test -> comparison OR test .)
    CHAT            reduce using rule 36 (test -> comparison OR test .)
    PLUS            reduce using rule 36 (test -> comparison OR test .)
    MINUS           reduce using rule 36 (test -> comparison OR test .)
    LPAREN          reduce using rule 36 (test -> comparison OR test .)
    LSQBRACK        reduce using rule 36 (test -> comparison OR test .)
    TRUE            reduce using rule 36 (test -> comparison OR test .)
    FALSE           reduce using rule 36 (test -> comparison OR test .)
    NONE            reduce using rule 36 (test -> comparison OR test .)
    INT             reduce using rule 36 (test -> comparison OR test .)
    FLOAT           reduce using rule 36 (test -> comparison OR test .)
    STRING          reduce using rule 36 (test -> comparison OR test .)
    RPAREN          reduce using rule 36 (test -> comparison OR test .)


state 96

    (37) test -> comparison AND test .

    SEMICOLON       reduce using rule 37 (test -> comparison AND test .)
    LBRACK          reduce using rule 37 (test -> comparison AND test .)
    RETURN          reduce using rule 37 (test -> comparison AND test .)
    BREAK           reduce using rule 37 (test -> comparison AND test .)
    CONTINUE        reduce using rule 37 (test -> comparison AND test .)
    NAME            reduce using rule 37 (test -> comparison AND test .)
    TRAIN           reduce using rule 37 (test -> comparison AND test .)
    PRED            reduce using rule 37 (test -> comparison AND test .)
    SAVE            reduce using rule 37 (test -> comparison AND test .)
    CHAT            reduce using rule 37 (test -> comparison AND test .)
    PLUS            reduce using rule 37 (test -> comparison AND test .)
    MINUS           reduce using rule 37 (test -> comparison AND test .)
    LPAREN          reduce using rule 37 (test -> comparison AND test .)
    LSQBRACK        reduce using rule 37 (test -> comparison AND test .)
    TRUE            reduce using rule 37 (test -> comparison AND test .)
    FALSE           reduce using rule 37 (test -> comparison AND test .)
    NONE            reduce using rule 37 (test -> comparison AND test .)
    INT             reduce using rule 37 (test -> comparison AND test .)
    FLOAT           reduce using rule 37 (test -> comparison AND test .)
    STRING          reduce using rule 37 (test -> comparison AND test .)
    RPAREN          reduce using rule 37 (test -> comparison AND test .)


state 97

    (52) assign_expr -> NAME ASSIGN expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    SEMICOLON       reduce using rule 52 (assign_expr -> NAME ASSIGN expr .)
    RPAREN          reduce using rule 52 (assign_expr -> NAME ASSIGN expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75


state 98

    (56) assign_expr -> NAME ASSIGN SCAN . LPAREN RPAREN

    LPAREN          shift and go to state 132


state 99

    (53) assign_expr -> NAME COLON basic_type . ASSIGN expr
    (54) assign_expr -> NAME COLON basic_type . ASSIGN STRING COLON STRING
    (55) assign_expr -> NAME COLON basic_type . ASSIGN list_expr COLON STRING

    ASSIGN          shift and go to state 133


state 100

    (46) basic_type -> INT_TYPE .

    ASSIGN          reduce using rule 46 (basic_type -> INT_TYPE .)


state 101

    (47) basic_type -> FLOAT_TYPE .

    ASSIGN          reduce using rule 47 (basic_type -> FLOAT_TYPE .)


state 102

    (48) basic_type -> LIST_TYPE .

    ASSIGN          reduce using rule 48 (basic_type -> LIST_TYPE .)


state 103

    (49) basic_type -> TUPLE_TYPE .

    ASSIGN          reduce using rule 49 (basic_type -> TUPLE_TYPE .)


state 104

    (50) basic_type -> MLP .

    ASSIGN          reduce using rule 50 (basic_type -> MLP .)


state 105

    (51) basic_type -> TRANSFORMER .

    ASSIGN          reduce using rule 51 (basic_type -> TRANSFORMER .)


state 106

    (39) comparison -> expr GT expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    OR              reduce using rule 39 (comparison -> expr GT expr .)
    AND             reduce using rule 39 (comparison -> expr GT expr .)
    SEMICOLON       reduce using rule 39 (comparison -> expr GT expr .)
    LBRACK          reduce using rule 39 (comparison -> expr GT expr .)
    RETURN          reduce using rule 39 (comparison -> expr GT expr .)
    BREAK           reduce using rule 39 (comparison -> expr GT expr .)
    CONTINUE        reduce using rule 39 (comparison -> expr GT expr .)
    NAME            reduce using rule 39 (comparison -> expr GT expr .)
    TRAIN           reduce using rule 39 (comparison -> expr GT expr .)
    PRED            reduce using rule 39 (comparison -> expr GT expr .)
    SAVE            reduce using rule 39 (comparison -> expr GT expr .)
    CHAT            reduce using rule 39 (comparison -> expr GT expr .)
    LPAREN          reduce using rule 39 (comparison -> expr GT expr .)
    LSQBRACK        reduce using rule 39 (comparison -> expr GT expr .)
    TRUE            reduce using rule 39 (comparison -> expr GT expr .)
    FALSE           reduce using rule 39 (comparison -> expr GT expr .)
    NONE            reduce using rule 39 (comparison -> expr GT expr .)
    INT             reduce using rule 39 (comparison -> expr GT expr .)
    FLOAT           reduce using rule 39 (comparison -> expr GT expr .)
    STRING          reduce using rule 39 (comparison -> expr GT expr .)
    RPAREN          reduce using rule 39 (comparison -> expr GT expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75

  ! PLUS            [ reduce using rule 39 (comparison -> expr GT expr .) ]
  ! MINUS           [ reduce using rule 39 (comparison -> expr GT expr .) ]


state 107

    (40) comparison -> expr LT expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    OR              reduce using rule 40 (comparison -> expr LT expr .)
    AND             reduce using rule 40 (comparison -> expr LT expr .)
    SEMICOLON       reduce using rule 40 (comparison -> expr LT expr .)
    LBRACK          reduce using rule 40 (comparison -> expr LT expr .)
    RETURN          reduce using rule 40 (comparison -> expr LT expr .)
    BREAK           reduce using rule 40 (comparison -> expr LT expr .)
    CONTINUE        reduce using rule 40 (comparison -> expr LT expr .)
    NAME            reduce using rule 40 (comparison -> expr LT expr .)
    TRAIN           reduce using rule 40 (comparison -> expr LT expr .)
    PRED            reduce using rule 40 (comparison -> expr LT expr .)
    SAVE            reduce using rule 40 (comparison -> expr LT expr .)
    CHAT            reduce using rule 40 (comparison -> expr LT expr .)
    LPAREN          reduce using rule 40 (comparison -> expr LT expr .)
    LSQBRACK        reduce using rule 40 (comparison -> expr LT expr .)
    TRUE            reduce using rule 40 (comparison -> expr LT expr .)
    FALSE           reduce using rule 40 (comparison -> expr LT expr .)
    NONE            reduce using rule 40 (comparison -> expr LT expr .)
    INT             reduce using rule 40 (comparison -> expr LT expr .)
    FLOAT           reduce using rule 40 (comparison -> expr LT expr .)
    STRING          reduce using rule 40 (comparison -> expr LT expr .)
    RPAREN          reduce using rule 40 (comparison -> expr LT expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75

  ! PLUS            [ reduce using rule 40 (comparison -> expr LT expr .) ]
  ! MINUS           [ reduce using rule 40 (comparison -> expr LT expr .) ]


state 108

    (41) comparison -> expr GTE expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    OR              reduce using rule 41 (comparison -> expr GTE expr .)
    AND             reduce using rule 41 (comparison -> expr GTE expr .)
    SEMICOLON       reduce using rule 41 (comparison -> expr GTE expr .)
    LBRACK          reduce using rule 41 (comparison -> expr GTE expr .)
    RETURN          reduce using rule 41 (comparison -> expr GTE expr .)
    BREAK           reduce using rule 41 (comparison -> expr GTE expr .)
    CONTINUE        reduce using rule 41 (comparison -> expr GTE expr .)
    NAME            reduce using rule 41 (comparison -> expr GTE expr .)
    TRAIN           reduce using rule 41 (comparison -> expr GTE expr .)
    PRED            reduce using rule 41 (comparison -> expr GTE expr .)
    SAVE            reduce using rule 41 (comparison -> expr GTE expr .)
    CHAT            reduce using rule 41 (comparison -> expr GTE expr .)
    LPAREN          reduce using rule 41 (comparison -> expr GTE expr .)
    LSQBRACK        reduce using rule 41 (comparison -> expr GTE expr .)
    TRUE            reduce using rule 41 (comparison -> expr GTE expr .)
    FALSE           reduce using rule 41 (comparison -> expr GTE expr .)
    NONE            reduce using rule 41 (comparison -> expr GTE expr .)
    INT             reduce using rule 41 (comparison -> expr GTE expr .)
    FLOAT           reduce using rule 41 (comparison -> expr GTE expr .)
    STRING          reduce using rule 41 (comparison -> expr GTE expr .)
    RPAREN          reduce using rule 41 (comparison -> expr GTE expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75

  ! PLUS            [ reduce using rule 41 (comparison -> expr GTE expr .) ]
  ! MINUS           [ reduce using rule 41 (comparison -> expr GTE expr .) ]


state 109

    (42) comparison -> expr LTE expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    OR              reduce using rule 42 (comparison -> expr LTE expr .)
    AND             reduce using rule 42 (comparison -> expr LTE expr .)
    SEMICOLON       reduce using rule 42 (comparison -> expr LTE expr .)
    LBRACK          reduce using rule 42 (comparison -> expr LTE expr .)
    RETURN          reduce using rule 42 (comparison -> expr LTE expr .)
    BREAK           reduce using rule 42 (comparison -> expr LTE expr .)
    CONTINUE        reduce using rule 42 (comparison -> expr LTE expr .)
    NAME            reduce using rule 42 (comparison -> expr LTE expr .)
    TRAIN           reduce using rule 42 (comparison -> expr LTE expr .)
    PRED            reduce using rule 42 (comparison -> expr LTE expr .)
    SAVE            reduce using rule 42 (comparison -> expr LTE expr .)
    CHAT            reduce using rule 42 (comparison -> expr LTE expr .)
    LPAREN          reduce using rule 42 (comparison -> expr LTE expr .)
    LSQBRACK        reduce using rule 42 (comparison -> expr LTE expr .)
    TRUE            reduce using rule 42 (comparison -> expr LTE expr .)
    FALSE           reduce using rule 42 (comparison -> expr LTE expr .)
    NONE            reduce using rule 42 (comparison -> expr LTE expr .)
    INT             reduce using rule 42 (comparison -> expr LTE expr .)
    FLOAT           reduce using rule 42 (comparison -> expr LTE expr .)
    STRING          reduce using rule 42 (comparison -> expr LTE expr .)
    RPAREN          reduce using rule 42 (comparison -> expr LTE expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75

  ! PLUS            [ reduce using rule 42 (comparison -> expr LTE expr .) ]
  ! MINUS           [ reduce using rule 42 (comparison -> expr LTE expr .) ]


state 110

    (43) comparison -> expr EQ expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    OR              reduce using rule 43 (comparison -> expr EQ expr .)
    AND             reduce using rule 43 (comparison -> expr EQ expr .)
    SEMICOLON       reduce using rule 43 (comparison -> expr EQ expr .)
    LBRACK          reduce using rule 43 (comparison -> expr EQ expr .)
    RETURN          reduce using rule 43 (comparison -> expr EQ expr .)
    BREAK           reduce using rule 43 (comparison -> expr EQ expr .)
    CONTINUE        reduce using rule 43 (comparison -> expr EQ expr .)
    NAME            reduce using rule 43 (comparison -> expr EQ expr .)
    TRAIN           reduce using rule 43 (comparison -> expr EQ expr .)
    PRED            reduce using rule 43 (comparison -> expr EQ expr .)
    SAVE            reduce using rule 43 (comparison -> expr EQ expr .)
    CHAT            reduce using rule 43 (comparison -> expr EQ expr .)
    LPAREN          reduce using rule 43 (comparison -> expr EQ expr .)
    LSQBRACK        reduce using rule 43 (comparison -> expr EQ expr .)
    TRUE            reduce using rule 43 (comparison -> expr EQ expr .)
    FALSE           reduce using rule 43 (comparison -> expr EQ expr .)
    NONE            reduce using rule 43 (comparison -> expr EQ expr .)
    INT             reduce using rule 43 (comparison -> expr EQ expr .)
    FLOAT           reduce using rule 43 (comparison -> expr EQ expr .)
    STRING          reduce using rule 43 (comparison -> expr EQ expr .)
    RPAREN          reduce using rule 43 (comparison -> expr EQ expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75

  ! PLUS            [ reduce using rule 43 (comparison -> expr EQ expr .) ]
  ! MINUS           [ reduce using rule 43 (comparison -> expr EQ expr .) ]


state 111

    (44) comparison -> expr NEQ expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    OR              reduce using rule 44 (comparison -> expr NEQ expr .)
    AND             reduce using rule 44 (comparison -> expr NEQ expr .)
    SEMICOLON       reduce using rule 44 (comparison -> expr NEQ expr .)
    LBRACK          reduce using rule 44 (comparison -> expr NEQ expr .)
    RETURN          reduce using rule 44 (comparison -> expr NEQ expr .)
    BREAK           reduce using rule 44 (comparison -> expr NEQ expr .)
    CONTINUE        reduce using rule 44 (comparison -> expr NEQ expr .)
    NAME            reduce using rule 44 (comparison -> expr NEQ expr .)
    TRAIN           reduce using rule 44 (comparison -> expr NEQ expr .)
    PRED            reduce using rule 44 (comparison -> expr NEQ expr .)
    SAVE            reduce using rule 44 (comparison -> expr NEQ expr .)
    CHAT            reduce using rule 44 (comparison -> expr NEQ expr .)
    LPAREN          reduce using rule 44 (comparison -> expr NEQ expr .)
    LSQBRACK        reduce using rule 44 (comparison -> expr NEQ expr .)
    TRUE            reduce using rule 44 (comparison -> expr NEQ expr .)
    FALSE           reduce using rule 44 (comparison -> expr NEQ expr .)
    NONE            reduce using rule 44 (comparison -> expr NEQ expr .)
    INT             reduce using rule 44 (comparison -> expr NEQ expr .)
    FLOAT           reduce using rule 44 (comparison -> expr NEQ expr .)
    STRING          reduce using rule 44 (comparison -> expr NEQ expr .)
    RPAREN          reduce using rule 44 (comparison -> expr NEQ expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75

  ! PLUS            [ reduce using rule 44 (comparison -> expr NEQ expr .) ]
  ! MINUS           [ reduce using rule 44 (comparison -> expr NEQ expr .) ]


state 112

    (57) expr -> expr PLUS expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    GT              reduce using rule 57 (expr -> expr PLUS expr .)
    LT              reduce using rule 57 (expr -> expr PLUS expr .)
    GTE             reduce using rule 57 (expr -> expr PLUS expr .)
    LTE             reduce using rule 57 (expr -> expr PLUS expr .)
    EQ              reduce using rule 57 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 57 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 57 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 57 (expr -> expr PLUS expr .)
    MOD             reduce using rule 57 (expr -> expr PLUS expr .)
    OR              reduce using rule 57 (expr -> expr PLUS expr .)
    AND             reduce using rule 57 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 57 (expr -> expr PLUS expr .)
    LBRACK          reduce using rule 57 (expr -> expr PLUS expr .)
    RETURN          reduce using rule 57 (expr -> expr PLUS expr .)
    BREAK           reduce using rule 57 (expr -> expr PLUS expr .)
    CONTINUE        reduce using rule 57 (expr -> expr PLUS expr .)
    NAME            reduce using rule 57 (expr -> expr PLUS expr .)
    TRAIN           reduce using rule 57 (expr -> expr PLUS expr .)
    PRED            reduce using rule 57 (expr -> expr PLUS expr .)
    SAVE            reduce using rule 57 (expr -> expr PLUS expr .)
    CHAT            reduce using rule 57 (expr -> expr PLUS expr .)
    LPAREN          reduce using rule 57 (expr -> expr PLUS expr .)
    LSQBRACK        reduce using rule 57 (expr -> expr PLUS expr .)
    TRUE            reduce using rule 57 (expr -> expr PLUS expr .)
    FALSE           reduce using rule 57 (expr -> expr PLUS expr .)
    NONE            reduce using rule 57 (expr -> expr PLUS expr .)
    INT             reduce using rule 57 (expr -> expr PLUS expr .)
    FLOAT           reduce using rule 57 (expr -> expr PLUS expr .)
    STRING          reduce using rule 57 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 57 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 57 (expr -> expr PLUS expr .)
    RSQBRACK        reduce using rule 57 (expr -> expr PLUS expr .)
    COLON           reduce using rule 57 (expr -> expr PLUS expr .)
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74

  ! TIMES           [ reduce using rule 57 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 57 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 71 ]
  ! MINUS           [ shift and go to state 72 ]
  ! MOD             [ shift and go to state 75 ]


state 113

    (58) expr -> expr MINUS expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    GT              reduce using rule 58 (expr -> expr MINUS expr .)
    LT              reduce using rule 58 (expr -> expr MINUS expr .)
    GTE             reduce using rule 58 (expr -> expr MINUS expr .)
    LTE             reduce using rule 58 (expr -> expr MINUS expr .)
    EQ              reduce using rule 58 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 58 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 58 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 58 (expr -> expr MINUS expr .)
    MOD             reduce using rule 58 (expr -> expr MINUS expr .)
    OR              reduce using rule 58 (expr -> expr MINUS expr .)
    AND             reduce using rule 58 (expr -> expr MINUS expr .)
    SEMICOLON       reduce using rule 58 (expr -> expr MINUS expr .)
    LBRACK          reduce using rule 58 (expr -> expr MINUS expr .)
    RETURN          reduce using rule 58 (expr -> expr MINUS expr .)
    BREAK           reduce using rule 58 (expr -> expr MINUS expr .)
    CONTINUE        reduce using rule 58 (expr -> expr MINUS expr .)
    NAME            reduce using rule 58 (expr -> expr MINUS expr .)
    TRAIN           reduce using rule 58 (expr -> expr MINUS expr .)
    PRED            reduce using rule 58 (expr -> expr MINUS expr .)
    SAVE            reduce using rule 58 (expr -> expr MINUS expr .)
    CHAT            reduce using rule 58 (expr -> expr MINUS expr .)
    LPAREN          reduce using rule 58 (expr -> expr MINUS expr .)
    LSQBRACK        reduce using rule 58 (expr -> expr MINUS expr .)
    TRUE            reduce using rule 58 (expr -> expr MINUS expr .)
    FALSE           reduce using rule 58 (expr -> expr MINUS expr .)
    NONE            reduce using rule 58 (expr -> expr MINUS expr .)
    INT             reduce using rule 58 (expr -> expr MINUS expr .)
    FLOAT           reduce using rule 58 (expr -> expr MINUS expr .)
    STRING          reduce using rule 58 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 58 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 58 (expr -> expr MINUS expr .)
    RSQBRACK        reduce using rule 58 (expr -> expr MINUS expr .)
    COLON           reduce using rule 58 (expr -> expr MINUS expr .)
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74

  ! TIMES           [ reduce using rule 58 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 58 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 71 ]
  ! MINUS           [ shift and go to state 72 ]
  ! MOD             [ shift and go to state 75 ]


state 114

    (59) expr -> expr TIMES expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    GT              reduce using rule 59 (expr -> expr TIMES expr .)
    LT              reduce using rule 59 (expr -> expr TIMES expr .)
    GTE             reduce using rule 59 (expr -> expr TIMES expr .)
    LTE             reduce using rule 59 (expr -> expr TIMES expr .)
    EQ              reduce using rule 59 (expr -> expr TIMES expr .)
    NEQ             reduce using rule 59 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 59 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 59 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 59 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 59 (expr -> expr TIMES expr .)
    MOD             reduce using rule 59 (expr -> expr TIMES expr .)
    OR              reduce using rule 59 (expr -> expr TIMES expr .)
    AND             reduce using rule 59 (expr -> expr TIMES expr .)
    SEMICOLON       reduce using rule 59 (expr -> expr TIMES expr .)
    LBRACK          reduce using rule 59 (expr -> expr TIMES expr .)
    RETURN          reduce using rule 59 (expr -> expr TIMES expr .)
    BREAK           reduce using rule 59 (expr -> expr TIMES expr .)
    CONTINUE        reduce using rule 59 (expr -> expr TIMES expr .)
    NAME            reduce using rule 59 (expr -> expr TIMES expr .)
    TRAIN           reduce using rule 59 (expr -> expr TIMES expr .)
    PRED            reduce using rule 59 (expr -> expr TIMES expr .)
    SAVE            reduce using rule 59 (expr -> expr TIMES expr .)
    CHAT            reduce using rule 59 (expr -> expr TIMES expr .)
    LPAREN          reduce using rule 59 (expr -> expr TIMES expr .)
    LSQBRACK        reduce using rule 59 (expr -> expr TIMES expr .)
    TRUE            reduce using rule 59 (expr -> expr TIMES expr .)
    FALSE           reduce using rule 59 (expr -> expr TIMES expr .)
    NONE            reduce using rule 59 (expr -> expr TIMES expr .)
    INT             reduce using rule 59 (expr -> expr TIMES expr .)
    FLOAT           reduce using rule 59 (expr -> expr TIMES expr .)
    STRING          reduce using rule 59 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 59 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 59 (expr -> expr TIMES expr .)
    RSQBRACK        reduce using rule 59 (expr -> expr TIMES expr .)
    COLON           reduce using rule 59 (expr -> expr TIMES expr .)

  ! PLUS            [ shift and go to state 71 ]
  ! MINUS           [ shift and go to state 72 ]
  ! TIMES           [ shift and go to state 73 ]
  ! DIVIDE          [ shift and go to state 74 ]
  ! MOD             [ shift and go to state 75 ]


state 115

    (60) expr -> expr DIVIDE expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    GT              reduce using rule 60 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 60 (expr -> expr DIVIDE expr .)
    GTE             reduce using rule 60 (expr -> expr DIVIDE expr .)
    LTE             reduce using rule 60 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 60 (expr -> expr DIVIDE expr .)
    NEQ             reduce using rule 60 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 60 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 60 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 60 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 60 (expr -> expr DIVIDE expr .)
    MOD             reduce using rule 60 (expr -> expr DIVIDE expr .)
    OR              reduce using rule 60 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 60 (expr -> expr DIVIDE expr .)
    SEMICOLON       reduce using rule 60 (expr -> expr DIVIDE expr .)
    LBRACK          reduce using rule 60 (expr -> expr DIVIDE expr .)
    RETURN          reduce using rule 60 (expr -> expr DIVIDE expr .)
    BREAK           reduce using rule 60 (expr -> expr DIVIDE expr .)
    CONTINUE        reduce using rule 60 (expr -> expr DIVIDE expr .)
    NAME            reduce using rule 60 (expr -> expr DIVIDE expr .)
    TRAIN           reduce using rule 60 (expr -> expr DIVIDE expr .)
    PRED            reduce using rule 60 (expr -> expr DIVIDE expr .)
    SAVE            reduce using rule 60 (expr -> expr DIVIDE expr .)
    CHAT            reduce using rule 60 (expr -> expr DIVIDE expr .)
    LPAREN          reduce using rule 60 (expr -> expr DIVIDE expr .)
    LSQBRACK        reduce using rule 60 (expr -> expr DIVIDE expr .)
    TRUE            reduce using rule 60 (expr -> expr DIVIDE expr .)
    FALSE           reduce using rule 60 (expr -> expr DIVIDE expr .)
    NONE            reduce using rule 60 (expr -> expr DIVIDE expr .)
    INT             reduce using rule 60 (expr -> expr DIVIDE expr .)
    FLOAT           reduce using rule 60 (expr -> expr DIVIDE expr .)
    STRING          reduce using rule 60 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 60 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 60 (expr -> expr DIVIDE expr .)
    RSQBRACK        reduce using rule 60 (expr -> expr DIVIDE expr .)
    COLON           reduce using rule 60 (expr -> expr DIVIDE expr .)

  ! PLUS            [ shift and go to state 71 ]
  ! MINUS           [ shift and go to state 72 ]
  ! TIMES           [ shift and go to state 73 ]
  ! DIVIDE          [ shift and go to state 74 ]
  ! MOD             [ shift and go to state 75 ]


state 116

    (61) expr -> expr MOD expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    GT              reduce using rule 61 (expr -> expr MOD expr .)
    LT              reduce using rule 61 (expr -> expr MOD expr .)
    GTE             reduce using rule 61 (expr -> expr MOD expr .)
    LTE             reduce using rule 61 (expr -> expr MOD expr .)
    EQ              reduce using rule 61 (expr -> expr MOD expr .)
    NEQ             reduce using rule 61 (expr -> expr MOD expr .)
    OR              reduce using rule 61 (expr -> expr MOD expr .)
    AND             reduce using rule 61 (expr -> expr MOD expr .)
    SEMICOLON       reduce using rule 61 (expr -> expr MOD expr .)
    LBRACK          reduce using rule 61 (expr -> expr MOD expr .)
    RETURN          reduce using rule 61 (expr -> expr MOD expr .)
    BREAK           reduce using rule 61 (expr -> expr MOD expr .)
    CONTINUE        reduce using rule 61 (expr -> expr MOD expr .)
    NAME            reduce using rule 61 (expr -> expr MOD expr .)
    TRAIN           reduce using rule 61 (expr -> expr MOD expr .)
    PRED            reduce using rule 61 (expr -> expr MOD expr .)
    SAVE            reduce using rule 61 (expr -> expr MOD expr .)
    CHAT            reduce using rule 61 (expr -> expr MOD expr .)
    LPAREN          reduce using rule 61 (expr -> expr MOD expr .)
    LSQBRACK        reduce using rule 61 (expr -> expr MOD expr .)
    TRUE            reduce using rule 61 (expr -> expr MOD expr .)
    FALSE           reduce using rule 61 (expr -> expr MOD expr .)
    NONE            reduce using rule 61 (expr -> expr MOD expr .)
    INT             reduce using rule 61 (expr -> expr MOD expr .)
    FLOAT           reduce using rule 61 (expr -> expr MOD expr .)
    STRING          reduce using rule 61 (expr -> expr MOD expr .)
    RPAREN          reduce using rule 61 (expr -> expr MOD expr .)
    COMMA           reduce using rule 61 (expr -> expr MOD expr .)
    RSQBRACK        reduce using rule 61 (expr -> expr MOD expr .)
    COLON           reduce using rule 61 (expr -> expr MOD expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75

  ! PLUS            [ reduce using rule 61 (expr -> expr MOD expr .) ]
  ! MINUS           [ reduce using rule 61 (expr -> expr MOD expr .) ]
  ! TIMES           [ reduce using rule 61 (expr -> expr MOD expr .) ]
  ! DIVIDE          [ reduce using rule 61 (expr -> expr MOD expr .) ]
  ! MOD             [ reduce using rule 61 (expr -> expr MOD expr .) ]


state 117

    (20) train_stmt -> TRAIN name list_expr .
    (78) list_expr -> list_expr . COMMA expr

    SEMICOLON       reduce using rule 20 (train_stmt -> TRAIN name list_expr .)
    RPAREN          reduce using rule 20 (train_stmt -> TRAIN name list_expr .)
    COMMA           shift and go to state 93


state 118

    (21) pred_stmt -> PRED name STRING .

    SEMICOLON       reduce using rule 21 (pred_stmt -> PRED name STRING .)
    RPAREN          reduce using rule 21 (pred_stmt -> PRED name STRING .)


state 119

    (22) save_stmt -> SAVE name STRING .

    SEMICOLON       reduce using rule 22 (save_stmt -> SAVE name STRING .)
    RPAREN          reduce using rule 22 (save_stmt -> SAVE name STRING .)


state 120

    (23) chat_stmt -> CHAT name name .

    SEMICOLON       reduce using rule 23 (chat_stmt -> CHAT name name .)
    RPAREN          reduce using rule 23 (chat_stmt -> CHAT name name .)


state 121

    (67) atom_expr -> atom_expr LSQBRACK expr . RSQBRACK
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    RSQBRACK        shift and go to state 134
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75


state 122

    (70) atom -> LSQBRACK list_expr RSQBRACK .

    LSQBRACK        reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    GT              reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    LT              reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    GTE             reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    LTE             reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    EQ              reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    NEQ             reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    PLUS            reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    MINUS           reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    TIMES           reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    DIVIDE          reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    MOD             reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    OR              reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    AND             reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    SEMICOLON       reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    LBRACK          reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    RETURN          reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    BREAK           reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    CONTINUE        reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    NAME            reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    TRAIN           reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    PRED            reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    SAVE            reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    CHAT            reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    LPAREN          reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    TRUE            reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    FALSE           reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    NONE            reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    INT             reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    FLOAT           reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    STRING          reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    RPAREN          reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    COMMA           reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    RSQBRACK        reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)
    COLON           reduce using rule 70 (atom -> LSQBRACK list_expr RSQBRACK .)


state 123

    (31) if_stmt -> IF test suite ELSE . suite
    (34) suite -> . simple_stmt
    (35) suite -> . LBRACK stmt_list RBRACK
    (10) simple_stmt -> . small_stmt SEMICOLON
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    LBRACK          shift and go to state 86
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    test                           shift and go to state 11
    suite                          shift and go to state 135
    simple_stmt                    shift and go to state 85
    small_stmt                     shift and go to state 6
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    name                           shift and go to state 18
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 124

    (35) suite -> LBRACK stmt_list . RBRACK
    (2) stmt_list -> stmt_list . stmt
    (4) stmt -> . simple_stmt
    (5) stmt -> . compound_stmt
    (10) simple_stmt -> . small_stmt SEMICOLON
    (6) compound_stmt -> . if_stmt
    (7) compound_stmt -> . while_stmt
    (8) compound_stmt -> . funcdef_stmt
    (9) compound_stmt -> . print
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (30) if_stmt -> . IF test suite
    (31) if_stmt -> . IF test suite ELSE suite
    (28) while_stmt -> . WHILE test suite
    (29) while_stmt -> . WHILE test suite ELSE suite
    (32) funcdef_stmt -> . DEF name LPAREN list_expr RPAREN suite
    (33) funcdef_stmt -> . DEF name LPAREN RPAREN suite
    (15) print -> . PRINT LPAREN small_stmt RPAREN SEMICOLON
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    RBRACK          shift and go to state 136
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    DEF             shift and go to state 17
    PRINT           shift and go to state 20
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    stmt                           shift and go to state 49
    simple_stmt                    shift and go to state 4
    compound_stmt                  shift and go to state 5
    small_stmt                     shift and go to state 6
    if_stmt                        shift and go to state 7
    while_stmt                     shift and go to state 8
    funcdef_stmt                   shift and go to state 9
    print                          shift and go to state 10
    test                           shift and go to state 11
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    name                           shift and go to state 18
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 125

    (29) while_stmt -> WHILE test suite ELSE . suite
    (34) suite -> . simple_stmt
    (35) suite -> . LBRACK stmt_list RBRACK
    (10) simple_stmt -> . small_stmt SEMICOLON
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    LBRACK          shift and go to state 86
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    test                           shift and go to state 11
    suite                          shift and go to state 137
    simple_stmt                    shift and go to state 85
    small_stmt                     shift and go to state 6
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    name                           shift and go to state 18
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 126

    (32) funcdef_stmt -> DEF name LPAREN list_expr . RPAREN suite
    (78) list_expr -> list_expr . COMMA expr

    RPAREN          shift and go to state 138
    COMMA           shift and go to state 93


state 127

    (33) funcdef_stmt -> DEF name LPAREN RPAREN . suite
    (34) suite -> . simple_stmt
    (35) suite -> . LBRACK stmt_list RBRACK
    (10) simple_stmt -> . small_stmt SEMICOLON
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    LBRACK          shift and go to state 86
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    name                           shift and go to state 18
    suite                          shift and go to state 139
    simple_stmt                    shift and go to state 85
    small_stmt                     shift and go to state 6
    test                           shift and go to state 11
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 128

    (68) atom_expr -> name LPAREN list_expr RPAREN .

    LSQBRACK        reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    GT              reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    LT              reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    GTE             reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    LTE             reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    EQ              reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    NEQ             reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    PLUS            reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    MINUS           reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    TIMES           reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    DIVIDE          reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    MOD             reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    OR              reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    AND             reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    SEMICOLON       reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    LBRACK          reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    RETURN          reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    BREAK           reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    CONTINUE        reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    NAME            reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    TRAIN           reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    PRED            reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    SAVE            reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    CHAT            reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    LPAREN          reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    TRUE            reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    FALSE           reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    NONE            reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    INT             reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    FLOAT           reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    STRING          reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    RPAREN          reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    COMMA           reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    RSQBRACK        reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)
    COLON           reduce using rule 68 (atom_expr -> name LPAREN list_expr RPAREN .)


state 129

    (77) atom -> name LSQBRACK atom RSQBRACK .

    LSQBRACK        reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    GT              reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    LT              reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    GTE             reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    LTE             reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    EQ              reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    NEQ             reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    PLUS            reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    MINUS           reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    TIMES           reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    DIVIDE          reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    MOD             reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    OR              reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    AND             reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    SEMICOLON       reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    LBRACK          reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    RETURN          reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    BREAK           reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    CONTINUE        reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    NAME            reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    TRAIN           reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    PRED            reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    SAVE            reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    CHAT            reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    LPAREN          reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    TRUE            reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    FALSE           reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    NONE            reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    INT             reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    FLOAT           reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    STRING          reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    RPAREN          reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    COMMA           reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    RSQBRACK        reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)
    COLON           reduce using rule 77 (atom -> name LSQBRACK atom RSQBRACK .)


state 130

    (78) list_expr -> list_expr COMMA expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr

    RPAREN          reduce using rule 78 (list_expr -> list_expr COMMA expr .)
    COMMA           reduce using rule 78 (list_expr -> list_expr COMMA expr .)
    SEMICOLON       reduce using rule 78 (list_expr -> list_expr COMMA expr .)
    RSQBRACK        reduce using rule 78 (list_expr -> list_expr COMMA expr .)
    COLON           reduce using rule 78 (list_expr -> list_expr COMMA expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75


state 131

    (15) print -> PRINT LPAREN small_stmt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 140


state 132

    (56) assign_expr -> NAME ASSIGN SCAN LPAREN . RPAREN

    RPAREN          shift and go to state 141


state 133

    (53) assign_expr -> NAME COLON basic_type ASSIGN . expr
    (54) assign_expr -> NAME COLON basic_type ASSIGN . STRING COLON STRING
    (55) assign_expr -> NAME COLON basic_type ASSIGN . list_expr COLON STRING
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (78) list_expr -> . list_expr COMMA expr
    (79) list_expr -> . expr
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    STRING          shift and go to state 143
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    NAME            shift and go to state 52
    INT             shift and go to state 47
    FLOAT           shift and go to state 48

    expr                           shift and go to state 142
    list_expr                      shift and go to state 144
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    name                           shift and go to state 18
    number                         shift and go to state 42
    string                         shift and go to state 43

state 134

    (67) atom_expr -> atom_expr LSQBRACK expr RSQBRACK .

    LSQBRACK        reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    GT              reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    LT              reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    GTE             reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    LTE             reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    EQ              reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    NEQ             reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    PLUS            reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    MINUS           reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    TIMES           reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    DIVIDE          reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    MOD             reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    OR              reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    AND             reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    SEMICOLON       reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    LBRACK          reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    RETURN          reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    BREAK           reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    CONTINUE        reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    NAME            reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    TRAIN           reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    PRED            reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    SAVE            reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    CHAT            reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    LPAREN          reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    TRUE            reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    FALSE           reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    NONE            reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    INT             reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    FLOAT           reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    STRING          reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    RPAREN          reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    COMMA           reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    RSQBRACK        reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)
    COLON           reduce using rule 67 (atom_expr -> atom_expr LSQBRACK expr RSQBRACK .)


state 135

    (31) if_stmt -> IF test suite ELSE suite .

    IF              reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    WHILE           reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    DEF             reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    PRINT           reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    RETURN          reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    BREAK           reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    CONTINUE        reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    NAME            reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    TRAIN           reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    PRED            reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    SAVE            reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    CHAT            reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    PLUS            reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    MINUS           reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    LPAREN          reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    LSQBRACK        reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    TRUE            reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    FALSE           reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    NONE            reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    INT             reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    FLOAT           reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    STRING          reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    $end            reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)
    RBRACK          reduce using rule 31 (if_stmt -> IF test suite ELSE suite .)


state 136

    (35) suite -> LBRACK stmt_list RBRACK .

    ELSE            reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    IF              reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    WHILE           reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    DEF             reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    PRINT           reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    RETURN          reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    BREAK           reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    CONTINUE        reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    NAME            reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    TRAIN           reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    PRED            reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    SAVE            reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    CHAT            reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    PLUS            reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    MINUS           reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    LPAREN          reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    LSQBRACK        reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    TRUE            reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    FALSE           reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    NONE            reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    INT             reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    FLOAT           reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    STRING          reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    $end            reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)
    RBRACK          reduce using rule 35 (suite -> LBRACK stmt_list RBRACK .)


state 137

    (29) while_stmt -> WHILE test suite ELSE suite .

    IF              reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    WHILE           reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    DEF             reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    PRINT           reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    RETURN          reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    BREAK           reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    CONTINUE        reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    NAME            reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    TRAIN           reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    PRED            reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    SAVE            reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    CHAT            reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    PLUS            reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    MINUS           reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    LPAREN          reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    LSQBRACK        reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    TRUE            reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    FALSE           reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    NONE            reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    INT             reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    FLOAT           reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    STRING          reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    $end            reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)
    RBRACK          reduce using rule 29 (while_stmt -> WHILE test suite ELSE suite .)


state 138

    (32) funcdef_stmt -> DEF name LPAREN list_expr RPAREN . suite
    (34) suite -> . simple_stmt
    (35) suite -> . LBRACK stmt_list RBRACK
    (10) simple_stmt -> . small_stmt SEMICOLON
    (11) small_stmt -> . test
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . dl_stmt
    (14) small_stmt -> . assign_expr
    (36) test -> . comparison OR test
    (37) test -> . comparison AND test
    (38) test -> . comparison
    (24) flow_stmt -> . RETURN
    (25) flow_stmt -> . RETURN list_expr
    (26) flow_stmt -> . BREAK
    (27) flow_stmt -> . CONTINUE
    (16) dl_stmt -> . train_stmt
    (17) dl_stmt -> . pred_stmt
    (18) dl_stmt -> . save_stmt
    (19) dl_stmt -> . chat_stmt
    (52) assign_expr -> . NAME ASSIGN expr
    (53) assign_expr -> . NAME COLON basic_type ASSIGN expr
    (54) assign_expr -> . NAME COLON basic_type ASSIGN STRING COLON STRING
    (55) assign_expr -> . NAME COLON basic_type ASSIGN list_expr COLON STRING
    (56) assign_expr -> . NAME ASSIGN SCAN LPAREN RPAREN
    (39) comparison -> . expr GT expr
    (40) comparison -> . expr LT expr
    (41) comparison -> . expr GTE expr
    (42) comparison -> . expr LTE expr
    (43) comparison -> . expr EQ expr
    (44) comparison -> . expr NEQ expr
    (45) comparison -> . expr
    (20) train_stmt -> . TRAIN name list_expr
    (21) pred_stmt -> . PRED name STRING
    (22) save_stmt -> . SAVE name STRING
    (23) chat_stmt -> . CHAT name name
    (57) expr -> . expr PLUS expr
    (58) expr -> . expr MINUS expr
    (59) expr -> . expr TIMES expr
    (60) expr -> . expr DIVIDE expr
    (61) expr -> . expr MOD expr
    (62) expr -> . factor
    (63) factor -> . PLUS factor
    (64) factor -> . MINUS factor
    (65) factor -> . atom_expr
    (66) atom_expr -> . atom
    (67) atom_expr -> . atom_expr LSQBRACK expr RSQBRACK
    (68) atom_expr -> . name LPAREN list_expr RPAREN
    (69) atom -> . LPAREN list_expr RPAREN
    (70) atom -> . LSQBRACK list_expr RSQBRACK
    (71) atom -> . name
    (72) atom -> . number
    (73) atom -> . string
    (74) atom -> . TRUE
    (75) atom -> . FALSE
    (76) atom -> . NONE
    (77) atom -> . name LSQBRACK atom RSQBRACK
    (80) name -> . NAME
    (81) number -> . INT
    (82) number -> . FLOAT
    (83) string -> . STRING

    LBRACK          shift and go to state 86
    RETURN          shift and go to state 22
    BREAK           shift and go to state 23
    CONTINUE        shift and go to state 24
    NAME            shift and go to state 29
    TRAIN           shift and go to state 32
    PRED            shift and go to state 33
    SAVE            shift and go to state 34
    CHAT            shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    LPAREN          shift and go to state 19
    LSQBRACK        shift and go to state 41
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NONE            shift and go to state 46
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    STRING          shift and go to state 31

    name                           shift and go to state 18
    suite                          shift and go to state 145
    simple_stmt                    shift and go to state 85
    small_stmt                     shift and go to state 6
    test                           shift and go to state 11
    flow_stmt                      shift and go to state 12
    dl_stmt                        shift and go to state 13
    assign_expr                    shift and go to state 14
    comparison                     shift and go to state 21
    train_stmt                     shift and go to state 25
    pred_stmt                      shift and go to state 26
    save_stmt                      shift and go to state 27
    chat_stmt                      shift and go to state 28
    expr                           shift and go to state 30
    factor                         shift and go to state 38
    atom_expr                      shift and go to state 39
    atom                           shift and go to state 40
    number                         shift and go to state 42
    string                         shift and go to state 43

state 139

    (33) funcdef_stmt -> DEF name LPAREN RPAREN suite .

    IF              reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    WHILE           reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    DEF             reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    PRINT           reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    RETURN          reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    BREAK           reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    CONTINUE        reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    NAME            reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    TRAIN           reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    PRED            reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    SAVE            reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    CHAT            reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    PLUS            reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    MINUS           reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    LPAREN          reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    LSQBRACK        reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    TRUE            reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    FALSE           reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    NONE            reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    INT             reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    FLOAT           reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    STRING          reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    $end            reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)
    RBRACK          reduce using rule 33 (funcdef_stmt -> DEF name LPAREN RPAREN suite .)


state 140

    (15) print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .

    IF              reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    WHILE           reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    DEF             reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    PRINT           reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    RETURN          reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    BREAK           reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    NAME            reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    TRAIN           reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    PRED            reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    SAVE            reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    CHAT            reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    PLUS            reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    MINUS           reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    LSQBRACK        reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    TRUE            reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    FALSE           reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    NONE            reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    INT             reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    FLOAT           reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    STRING          reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    $end            reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)
    RBRACK          reduce using rule 15 (print -> PRINT LPAREN small_stmt RPAREN SEMICOLON .)


state 141

    (56) assign_expr -> NAME ASSIGN SCAN LPAREN RPAREN .

    SEMICOLON       reduce using rule 56 (assign_expr -> NAME ASSIGN SCAN LPAREN RPAREN .)
    RPAREN          reduce using rule 56 (assign_expr -> NAME ASSIGN SCAN LPAREN RPAREN .)


state 142

    (53) assign_expr -> NAME COLON basic_type ASSIGN expr .
    (57) expr -> expr . PLUS expr
    (58) expr -> expr . MINUS expr
    (59) expr -> expr . TIMES expr
    (60) expr -> expr . DIVIDE expr
    (61) expr -> expr . MOD expr
    (79) list_expr -> expr .

    SEMICOLON       reduce using rule 53 (assign_expr -> NAME COLON basic_type ASSIGN expr .)
    RPAREN          reduce using rule 53 (assign_expr -> NAME COLON basic_type ASSIGN expr .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MOD             shift and go to state 75
    COLON           reduce using rule 79 (list_expr -> expr .)
    COMMA           reduce using rule 79 (list_expr -> expr .)


state 143

    (54) assign_expr -> NAME COLON basic_type ASSIGN STRING . COLON STRING
    (83) string -> STRING .

  ! shift/reduce conflict for COLON resolved as shift
    COLON           shift and go to state 146
    LSQBRACK        reduce using rule 83 (string -> STRING .)
    PLUS            reduce using rule 83 (string -> STRING .)
    MINUS           reduce using rule 83 (string -> STRING .)
    TIMES           reduce using rule 83 (string -> STRING .)
    DIVIDE          reduce using rule 83 (string -> STRING .)
    MOD             reduce using rule 83 (string -> STRING .)
    SEMICOLON       reduce using rule 83 (string -> STRING .)
    RPAREN          reduce using rule 83 (string -> STRING .)
    COMMA           reduce using rule 83 (string -> STRING .)

  ! COLON           [ reduce using rule 83 (string -> STRING .) ]


state 144

    (55) assign_expr -> NAME COLON basic_type ASSIGN list_expr . COLON STRING
    (78) list_expr -> list_expr . COMMA expr

    COLON           shift and go to state 147
    COMMA           shift and go to state 93


state 145

    (32) funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .

    IF              reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    WHILE           reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    DEF             reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    PRINT           reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    RETURN          reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    BREAK           reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    CONTINUE        reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    NAME            reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    TRAIN           reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    PRED            reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    SAVE            reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    CHAT            reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    PLUS            reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    MINUS           reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    LPAREN          reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    LSQBRACK        reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    TRUE            reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    FALSE           reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    NONE            reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    INT             reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    FLOAT           reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    STRING          reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    $end            reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)
    RBRACK          reduce using rule 32 (funcdef_stmt -> DEF name LPAREN list_expr RPAREN suite .)


state 146

    (54) assign_expr -> NAME COLON basic_type ASSIGN STRING COLON . STRING

    STRING          shift and go to state 148


state 147

    (55) assign_expr -> NAME COLON basic_type ASSIGN list_expr COLON . STRING

    STRING          shift and go to state 149


state 148

    (54) assign_expr -> NAME COLON basic_type ASSIGN STRING COLON STRING .

    SEMICOLON       reduce using rule 54 (assign_expr -> NAME COLON basic_type ASSIGN STRING COLON STRING .)
    RPAREN          reduce using rule 54 (assign_expr -> NAME COLON basic_type ASSIGN STRING COLON STRING .)


state 149

    (55) assign_expr -> NAME COLON basic_type ASSIGN list_expr COLON STRING .

    SEMICOLON       reduce using rule 55 (assign_expr -> NAME COLON basic_type ASSIGN list_expr COLON STRING .)
    RPAREN          reduce using rule 55 (assign_expr -> NAME COLON basic_type ASSIGN list_expr COLON STRING .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 18 resolved as shift
WARNING: shift/reduce conflict for LSQBRACK in state 18 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 30 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 30 resolved as shift
WARNING: shift/reduce conflict for LSQBRACK in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 116 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 116 resolved as shift
WARNING: shift/reduce conflict for MOD in state 116 resolved as shift
WARNING: shift/reduce conflict for COLON in state 143 resolved as shift
